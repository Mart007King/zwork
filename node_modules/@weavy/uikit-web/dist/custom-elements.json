{
  "version": "experimental",
  "tags": [
    {
      "name": "wy-attachment",
      "path": "./../src/components/wy-attachment.ts",
      "attributes": [
        {
          "name": "name",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "previewUrl",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "url",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "provider",
          "type": "ProviderType | undefined"
        },
        {
          "name": "size",
          "type": "number",
          "default": "0"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "default": "\"chatCss\""
        },
        {
          "name": "name",
          "attribute": "name",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "previewUrl",
          "attribute": "previewUrl",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "url",
          "attribute": "url",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "provider",
          "attribute": "provider",
          "type": "ProviderType | undefined"
        },
        {
          "name": "size",
          "attribute": "size",
          "type": "number",
          "default": "0"
        }
      ]
    },
    {
      "name": "wy-attachments-list",
      "path": "./../src/components/wy-attachments-list.ts",
      "attributes": [
        {
          "name": "limit",
          "type": "number",
          "default": "3"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "default": "\"chatCss\""
        },
        {
          "name": "files",
          "type": "FileType[]",
          "default": "[]"
        },
        {
          "name": "limit",
          "attribute": "limit",
          "type": "number",
          "default": "3"
        }
      ],
      "events": [
        {
          "name": "file-open"
        }
      ]
    },
    {
      "name": "wy-avatar",
      "path": "./../src/components/wy-avatar.ts",
      "attributes": [
        {
          "name": "size",
          "type": "number",
          "default": "32"
        },
        {
          "name": "src",
          "type": "string | undefined",
          "default": "\"\""
        },
        {
          "name": "name",
          "type": "string | undefined",
          "default": "\"\""
        },
        {
          "name": "avatarClass",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "presence",
          "type": "PresenceType | undefined"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "array",
          "default": "[\"chatCss\",null]"
        },
        {
          "name": "size",
          "attribute": "size",
          "type": "number",
          "default": "32"
        },
        {
          "name": "src",
          "attribute": "src",
          "type": "string | undefined",
          "default": "\"\""
        },
        {
          "name": "name",
          "attribute": "name",
          "type": "string | undefined",
          "default": "\"\""
        },
        {
          "name": "avatarClass",
          "attribute": "avatarClass",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "presence",
          "attribute": "presence",
          "type": "PresenceType | undefined"
        }
      ]
    },
    {
      "name": "wy-avatar-group",
      "path": "./../src/components/wy-avatar.ts",
      "attributes": [
        {
          "name": "size",
          "type": "number",
          "default": "32"
        },
        {
          "name": "user",
          "type": "UserType"
        },
        {
          "name": "name",
          "type": "string",
          "default": "\"\""
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "array",
          "default": "[\"chatCss\",null]"
        },
        {
          "name": "size",
          "attribute": "size",
          "type": "number",
          "default": "32"
        },
        {
          "name": "user",
          "attribute": "user",
          "type": "UserType"
        },
        {
          "name": "members",
          "type": "MembersResultType | undefined"
        },
        {
          "name": "name",
          "attribute": "name",
          "type": "string",
          "default": "\"\""
        }
      ]
    },
    {
      "name": "wy-badge",
      "path": "./../src/components/wy-badge.ts",
      "properties": [
        {
          "name": "styles",
          "default": "\"chatCss\""
        },
        {
          "name": "private",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "rooms",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "badgeQuery",
          "type": "QueryController<BadgeType>",
          "default": "\"new QueryController<BadgeType>(this)\""
        },
        {
          "name": "handleRealtimeMessage",
          "type": "(_realtimeEvent: RealtimeMessageEventType) => void",
          "default": "\"(_realtimeEvent: RealtimeMessageEventType) => {\\n    this.handleBadgeRefresh();\\n  }\""
        },
        {
          "name": "handleRealtimeSeenBy",
          "type": "(_realtimeEvent: RealtimeConversationMarkedEventType) => void",
          "default": "\"(_realtimeEvent: RealtimeConversationMarkedEventType) => {\\n    this.handleBadgeRefresh();\\n  }\""
        }
      ]
    },
    {
      "name": "wy-button",
      "path": "./../src/components/wy-button.ts",
      "attributes": [
        {
          "name": "type",
          "type": "\"submit\" | \"reset\" | undefined"
        },
        {
          "name": "kind",
          "type": "\"filled\" | \"inline\" | \"icon\" | \"icon-inline\" | \"link\" | undefined",
          "default": "\"filled\""
        },
        {
          "name": "active",
          "type": "boolean | undefined",
          "default": "false"
        },
        {
          "name": "buttonClass",
          "type": "string | undefined",
          "default": "\"\""
        },
        {
          "name": "disabled",
          "type": "boolean | undefined",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "array",
          "default": "[\"allStyles\",null]"
        },
        {
          "name": "type",
          "attribute": "type",
          "type": "\"submit\" | \"reset\" | undefined"
        },
        {
          "name": "kind",
          "attribute": "kind",
          "type": "\"filled\" | \"inline\" | \"icon\" | \"icon-inline\" | \"link\" | undefined",
          "default": "\"filled\""
        },
        {
          "name": "active",
          "attribute": "active",
          "type": "boolean | undefined",
          "default": "false"
        },
        {
          "name": "buttonClass",
          "attribute": "buttonClass",
          "type": "string | undefined",
          "default": "\"\""
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "type": "boolean | undefined",
          "default": "false"
        }
      ]
    },
    {
      "name": "wy-cloud-files",
      "path": "./../src/components/wy-cloud-files.ts",
      "properties": [
        {
          "name": "styles",
          "default": "\"cloudFilesCss\""
        },
        {
          "name": "src",
          "type": "URL | undefined"
        },
        {
          "name": "iframeVisible",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "showOverlay",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "origin",
          "type": "string"
        }
      ],
      "events": [
        {
          "name": "external-blobs"
        },
        {
          "name": "release-focus"
        }
      ]
    },
    {
      "name": "wy-comment-edit",
      "path": "./../src/components/wy-comment-edit.ts",
      "attributes": [
        {
          "name": "parentId",
          "type": "number"
        },
        {
          "name": "commentId",
          "type": "number"
        },
        {
          "name": "temp",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "createdAt",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "modifiedAt",
          "type": "string | undefined",
          "default": "\"undefined\""
        },
        {
          "name": "isSubscribed",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "isTrashed",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "text",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "attachments",
          "type": "FileType[]",
          "default": "[]"
        },
        {
          "name": "pollOptions",
          "type": "PollOptionType[] | undefined",
          "default": "[]"
        },
        {
          "name": "reactions",
          "type": "ReactableType[]",
          "default": "[]"
        },
        {
          "name": "seenBy",
          "type": "MemberType[]",
          "default": "[]"
        },
        {
          "name": "userId",
          "type": "number",
          "default": "-1"
        },
        {
          "name": "features",
          "type": "FeaturesConfigType | undefined",
          "default": "{}"
        },
        {
          "name": "availableFeatures",
          "type": "FeaturesListType | undefined"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "default": "\"chatCss\""
        },
        {
          "name": "app",
          "type": "AppType"
        },
        {
          "name": "user",
          "type": "UserType"
        },
        {
          "name": "parentId",
          "attribute": "parentId",
          "type": "number"
        },
        {
          "name": "commentId",
          "attribute": "commentId",
          "type": "number"
        },
        {
          "name": "temp",
          "attribute": "temp",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "createdBy",
          "type": "MemberType"
        },
        {
          "name": "createdAt",
          "attribute": "createdAt",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "modifiedAt",
          "attribute": "modifiedAt",
          "type": "string | undefined",
          "default": "\"undefined\""
        },
        {
          "name": "isSubscribed",
          "attribute": "isSubscribed",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "isTrashed",
          "attribute": "isTrashed",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "text",
          "attribute": "text",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "attachments",
          "attribute": "attachments",
          "type": "FileType[]",
          "default": "[]"
        },
        {
          "name": "pollOptions",
          "attribute": "pollOptions",
          "type": "PollOptionType[] | undefined",
          "default": "[]"
        },
        {
          "name": "meeting",
          "type": "MeetingType | undefined"
        },
        {
          "name": "embed",
          "type": "EmbedType | undefined"
        },
        {
          "name": "reactions",
          "attribute": "reactions",
          "type": "ReactableType[]",
          "default": "[]"
        },
        {
          "name": "seenBy",
          "attribute": "seenBy",
          "type": "MemberType[]",
          "default": "[]"
        },
        {
          "name": "userId",
          "attribute": "userId",
          "type": "number",
          "default": "-1"
        },
        {
          "name": "features",
          "attribute": "features",
          "type": "FeaturesConfigType | undefined",
          "default": "{}"
        },
        {
          "name": "availableFeatures",
          "attribute": "availableFeatures",
          "type": "FeaturesListType | undefined"
        }
      ],
      "events": [
        {
          "name": "edit"
        }
      ]
    },
    {
      "name": "wy-comment-editor",
      "path": "./../src/components/wy-comment-editor.ts",
      "attributes": [
        {
          "name": "placeholder",
          "type": "string"
        },
        {
          "name": "text",
          "type": "string | undefined",
          "default": "\"\""
        },
        {
          "name": "buttonText",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "typing",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "draft",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "editorType",
          "type": "string",
          "default": "\"comments\""
        },
        {
          "name": "editorClass",
          "type": "string",
          "default": "\"wy-comment-editor\""
        },
        {
          "name": "editorLocation",
          "type": "\"messages\" | \"posts\" | \"apps\" | \"files\"",
          "default": "\"apps\""
        }
      ],
      "properties": [
        {
          "name": "styles",
          "default": "\"chatCss\""
        },
        {
          "name": "app",
          "type": "AppType | undefined"
        },
        {
          "name": "parentId",
          "type": "number | undefined"
        },
        {
          "name": "user",
          "type": "UserType | undefined"
        },
        {
          "name": "placeholder",
          "attribute": "placeholder",
          "type": "string"
        },
        {
          "name": "text",
          "attribute": "text",
          "type": "string | undefined",
          "default": "\"\""
        },
        {
          "name": "embed",
          "type": "EmbedType | undefined"
        },
        {
          "name": "options",
          "type": "PollOptionType[] | undefined",
          "default": "[]"
        },
        {
          "name": "attachments",
          "type": "FileType[]",
          "default": "[]"
        },
        {
          "name": "buttonText",
          "attribute": "buttonText",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "typing",
          "attribute": "typing",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "draft",
          "attribute": "draft",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "editorType",
          "attribute": "editorType",
          "type": "string",
          "default": "\"comments\""
        },
        {
          "name": "editorClass",
          "attribute": "editorClass",
          "type": "string",
          "default": "\"wy-comment-editor\""
        },
        {
          "name": "editorLocation",
          "attribute": "editorLocation",
          "type": "\"messages\" | \"posts\" | \"apps\" | \"files\"",
          "default": "\"apps\""
        },
        {
          "name": "availableFeatures",
          "type": "FeaturesListType | undefined",
          "default": "[]"
        },
        {
          "name": "features",
          "type": "FeaturesConfigType | undefined",
          "default": "{}"
        }
      ],
      "events": [
        {
          "name": "submit"
        }
      ]
    },
    {
      "name": "wy-comment-trashed",
      "path": "./../src/components/wy-comment-trashed.ts",
      "attributes": [
        {
          "name": "commentId",
          "type": "number"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "default": "\"chatCss\""
        },
        {
          "name": "commentId",
          "attribute": "commentId",
          "type": "number"
        }
      ],
      "events": [
        {
          "name": "restore"
        }
      ]
    },
    {
      "name": "wy-comment-view",
      "path": "./../src/components/wy-comment-view.ts",
      "attributes": [
        {
          "name": "commentId",
          "type": "number"
        },
        {
          "name": "parentId",
          "type": "number"
        },
        {
          "name": "temp",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "createdAt",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "modifiedAt",
          "type": "string | undefined",
          "default": "\"undefined\""
        },
        {
          "name": "isTrashed",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "html",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "attachments",
          "type": "FileType[]",
          "default": "[]"
        },
        {
          "name": "pollOptions",
          "type": "PollOptionType[] | undefined",
          "default": "[]"
        },
        {
          "name": "reactions",
          "type": "ReactableType[]",
          "default": "[]"
        },
        {
          "name": "features",
          "type": "FeaturesConfigType | undefined",
          "default": "{}"
        },
        {
          "name": "availableFeatures",
          "type": "FeaturesListType | undefined"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "default": "\"chatCss\""
        },
        {
          "name": "app",
          "type": "AppType"
        },
        {
          "name": "user",
          "type": "UserType"
        },
        {
          "name": "commentId",
          "attribute": "commentId",
          "type": "number"
        },
        {
          "name": "parentId",
          "attribute": "parentId",
          "type": "number"
        },
        {
          "name": "temp",
          "attribute": "temp",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "createdBy",
          "type": "MemberType"
        },
        {
          "name": "createdAt",
          "attribute": "createdAt",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "modifiedAt",
          "attribute": "modifiedAt",
          "type": "string | undefined",
          "default": "\"undefined\""
        },
        {
          "name": "isTrashed",
          "attribute": "isTrashed",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "html",
          "attribute": "html",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "attachments",
          "attribute": "attachments",
          "type": "FileType[]",
          "default": "[]"
        },
        {
          "name": "embed",
          "type": "EmbedType | undefined"
        },
        {
          "name": "pollOptions",
          "attribute": "pollOptions",
          "type": "PollOptionType[] | undefined",
          "default": "[]"
        },
        {
          "name": "meeting",
          "type": "MeetingType | undefined"
        },
        {
          "name": "reactions",
          "attribute": "reactions",
          "type": "ReactableType[]",
          "default": "[]"
        },
        {
          "name": "features",
          "attribute": "features",
          "type": "FeaturesConfigType | undefined",
          "default": "{}"
        },
        {
          "name": "availableFeatures",
          "attribute": "availableFeatures",
          "type": "FeaturesListType | undefined"
        }
      ],
      "events": [
        {
          "name": "vote"
        },
        {
          "name": "trash"
        },
        {
          "name": "edit"
        }
      ]
    },
    {
      "name": "wy-comment",
      "path": "./../src/components/wy-comment.ts",
      "attributes": [
        {
          "name": "commentId",
          "type": "number"
        },
        {
          "name": "parentId",
          "type": "number"
        },
        {
          "name": "temp",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "createdAt",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "modifiedAt",
          "type": "string | undefined",
          "default": "\"undefined\""
        },
        {
          "name": "isTrashed",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "html",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "text",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "pollOptions",
          "type": "PollOptionType[] | undefined",
          "default": "[]"
        },
        {
          "name": "reactions",
          "type": "ReactableType[]",
          "default": "[]"
        },
        {
          "name": "seenBy",
          "type": "MemberType[]",
          "default": "[]"
        },
        {
          "name": "features",
          "type": "FeaturesConfigType | undefined",
          "default": "{}"
        },
        {
          "name": "availableFeatures",
          "type": "FeaturesListType | undefined"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "default": "\"chatCss\""
        },
        {
          "name": "app",
          "type": "AppType"
        },
        {
          "name": "user",
          "type": "UserType"
        },
        {
          "name": "commentId",
          "attribute": "commentId",
          "type": "number"
        },
        {
          "name": "parentId",
          "attribute": "parentId",
          "type": "number"
        },
        {
          "name": "temp",
          "attribute": "temp",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "createdBy",
          "type": "MemberType"
        },
        {
          "name": "createdAt",
          "attribute": "createdAt",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "modifiedAt",
          "attribute": "modifiedAt",
          "type": "string | undefined",
          "default": "\"undefined\""
        },
        {
          "name": "isTrashed",
          "attribute": "isTrashed",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "html",
          "attribute": "html",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "text",
          "attribute": "text",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "attachments",
          "type": "FileType[]",
          "default": "[]"
        },
        {
          "name": "pollOptions",
          "attribute": "pollOptions",
          "type": "PollOptionType[] | undefined",
          "default": "[]"
        },
        {
          "name": "meeting",
          "type": "MeetingType | undefined"
        },
        {
          "name": "embed",
          "type": "EmbedType | undefined"
        },
        {
          "name": "reactions",
          "attribute": "reactions",
          "type": "ReactableType[]",
          "default": "[]"
        },
        {
          "name": "commentCount",
          "type": "number",
          "default": "0"
        },
        {
          "name": "seenBy",
          "attribute": "seenBy",
          "type": "MemberType[]",
          "default": "[]"
        },
        {
          "name": "features",
          "attribute": "features",
          "type": "FeaturesConfigType | undefined",
          "default": "{}"
        },
        {
          "name": "availableFeatures",
          "attribute": "availableFeatures",
          "type": "FeaturesListType | undefined"
        }
      ],
      "events": [
        {
          "name": "vote"
        },
        {
          "name": "subscribe"
        },
        {
          "name": "trash"
        },
        {
          "name": "restore"
        }
      ]
    },
    {
      "name": "wy-comments",
      "path": "./../src/components/wy-comments.ts",
      "attributes": [
        {
          "name": "parentId",
          "type": "number"
        },
        {
          "name": "features",
          "type": "FeaturesConfigType | undefined",
          "default": "{}"
        },
        {
          "name": "availableFeatures",
          "type": "FeaturesListType | undefined"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "default": "\"chatCss\""
        },
        {
          "name": "app",
          "type": "AppType"
        },
        {
          "name": "user",
          "type": "UserType"
        },
        {
          "name": "parentId",
          "attribute": "parentId",
          "type": "number"
        },
        {
          "name": "location",
          "type": "\"posts\" | \"apps\" | \"files\"",
          "default": "\"apps\""
        },
        {
          "name": "features",
          "attribute": "features",
          "type": "FeaturesConfigType | undefined",
          "default": "{}"
        },
        {
          "name": "availableFeatures",
          "attribute": "availableFeatures",
          "type": "FeaturesListType | undefined"
        },
        {
          "name": "commentsQuery",
          "type": "InfiniteQueryController<CommentsResultType>",
          "default": "\"new InfiniteQueryController<CommentsResultType>(this)\""
        },
        {
          "name": "handleRealtimeCommentCreated",
          "type": "(realtimeEvent: RealtimeCommentEventType) => void",
          "default": "\"(realtimeEvent: RealtimeCommentEventType) => {\\n    if (\\n      !this.weavyContext ||\\n      realtimeEvent.actor.id === this.user!.id ||\\n      realtimeEvent.comment.parent?.id !== this.parentId\\n    ) {\\n      return;\\n    }\\n\\n    realtimeEvent.comment.created_by = realtimeEvent.actor;\\n    addCacheItem(this.weavyContext.queryClient, [\\\"comments\\\", this.parentId], realtimeEvent.comment, undefined, {\\n      descending: false,\\n    });\\n  }\""
        },
        {
          "name": "handleRealtimeReactionAdded",
          "type": "(realtimeEvent: RealtimeReactionEventType) => void",
          "default": "\"(realtimeEvent: RealtimeReactionEventType) => {\\n    if (!this.weavyContext || realtimeEvent.actor.id === this.user!.id || realtimeEvent.entity.type !== \\\"comment\\\") {\\n      return;\\n    }\\n\\n    updateCacheItem(\\n      this.weavyContext.queryClient,\\n      [\\\"comments\\\", this.parentId],\\n      realtimeEvent.entity.id,\\n      (item: CommentType) => {\\n        item.reactions = [\\n          ...(item.reactions || []),\\n          { content: realtimeEvent.reaction, created_by_id: realtimeEvent.actor.id },\\n        ];\\n      }\\n    );\\n  }\""
        },
        {
          "name": "handleRealtimeReactionDeleted",
          "type": "(realtimeEvent: RealtimeReactionEventType) => void",
          "default": "\"(realtimeEvent: RealtimeReactionEventType) => {\\n    if (!this.weavyContext || realtimeEvent.actor.id === this.user!.id || realtimeEvent.entity.type !== \\\"comment\\\") {\\n      return;\\n    }\\n\\n    updateCacheItem(\\n      this.weavyContext.queryClient,\\n      [\\\"comments\\\", this.parentId],\\n      realtimeEvent.entity.id,\\n      (item: CommentType) => {\\n        item.reactions = item.reactions.filter((item) => item.created_by_id !== realtimeEvent.actor.id);\\n      }\\n    );\\n  }\""
        }
      ]
    },
    {
      "name": "wy-conversation-list-item",
      "path": "./../src/components/wy-conversation-list-item.ts",
      "attributes": [
        {
          "name": "conversationId",
          "type": "number"
        },
        {
          "name": "unread",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "avatarUrl",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "displayName",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "room",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "selected",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "starred",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "pinned",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "default": "\"chatCss\""
        },
        {
          "name": "conversationId",
          "attribute": "conversationId",
          "type": "number"
        },
        {
          "name": "unread",
          "attribute": "unread",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "avatarUrl",
          "attribute": "avatarUrl",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "displayName",
          "attribute": "displayName",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "room",
          "attribute": "room",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "selected",
          "attribute": "selected",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "starred",
          "attribute": "starred",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "pinned",
          "attribute": "pinned",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "members",
          "type": "MembersResultType"
        },
        {
          "name": "lastMessage",
          "type": "MessageType | undefined"
        },
        {
          "name": "user",
          "type": "UserType | undefined"
        }
      ],
      "events": [
        {
          "name": "refetch"
        },
        {
          "name": "selected"
        },
        {
          "name": "star"
        },
        {
          "name": "pin"
        },
        {
          "name": "mark"
        },
        {
          "name": "leave"
        }
      ]
    },
    {
      "name": "wy-conversation-list",
      "path": "./../src/components/wy-conversation-list.ts",
      "attributes": [
        {
          "name": "name",
          "type": "string | undefined"
        },
        {
          "name": "conversationId",
          "type": "number | undefined"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "array",
          "default": "[\"chatCss\",null]"
        },
        {
          "name": "user",
          "type": "UserType | undefined"
        },
        {
          "name": "name",
          "attribute": "name",
          "type": "string | undefined"
        },
        {
          "name": "conversationId",
          "attribute": "conversationId",
          "type": "number | undefined"
        },
        {
          "name": "conversationsQuery",
          "type": "InfiniteQueryController<ConversationsResultType>",
          "default": "\"new InfiniteQueryController<ConversationsResultType>(this)\""
        },
        {
          "name": "userQuery",
          "type": "QueryController<UserType>",
          "default": "\"new QueryController<UserType>(this)\""
        }
      ],
      "events": [
        {
          "name": "conversation-selected"
        }
      ]
    },
    {
      "name": "wy-conversation-new",
      "path": "./../src/components/wy-conversation-new.ts",
      "properties": [
        {
          "name": "styles",
          "type": "array",
          "default": "[\"allStyles\",null]"
        }
      ],
      "events": [
        {
          "name": "refetch"
        },
        {
          "name": "selected"
        },
        {
          "name": "release-focus"
        }
      ]
    },
    {
      "name": "wy-conversation",
      "path": "./../src/components/wy-conversation.ts",
      "attributes": [
        {
          "name": "cssClass",
          "type": "string | undefined"
        },
        {
          "name": "features",
          "type": "FeaturesConfigType",
          "default": "{}"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "array",
          "default": "[\"chatCss\",null]"
        },
        {
          "name": "user",
          "type": "UserType | undefined"
        },
        {
          "name": "conversation",
          "type": "ConversationType | undefined"
        },
        {
          "name": "lastReadMessageId",
          "type": "number | undefined"
        },
        {
          "name": "lastReadMessagePosition",
          "type": "\"top\" | \"bottom\"",
          "default": "\"bottom\""
        },
        {
          "name": "cssClass",
          "attribute": "cssClass",
          "type": "string | undefined"
        },
        {
          "name": "availableFeatures",
          "type": "FeaturesListType | undefined"
        },
        {
          "name": "features",
          "attribute": "features",
          "type": "FeaturesConfigType",
          "default": "{}"
        },
        {
          "name": "releaseFocusEvent",
          "description": "A keyboard-consuming element releases focus.",
          "type": "() => CustomEvent<undefined>",
          "default": "\"() => new CustomEvent<undefined>(\\\"release-focus\\\", { bubbles: true, composed: true })\""
        },
        {
          "name": "messagesQuery",
          "type": "InfiniteQueryController<MessagesResultType>",
          "default": "\"new InfiniteQueryController<MessagesResultType>(this)\""
        },
        {
          "name": "membersQuery",
          "type": "QueryController<MembersResultType>",
          "default": "\"new QueryController<MembersResultType>(this)\""
        },
        {
          "name": "userQuery",
          "type": "QueryController<UserType>",
          "default": "\"new QueryController<UserType>(this)\""
        },
        {
          "name": "featuresQuery",
          "type": "QueryController<FeaturesListType>",
          "default": "\"new QueryController<FeaturesListType>(this)\""
        },
        {
          "name": "handleRealtimeMessage",
          "type": "(realtimeEvent: RealtimeMessageEventType) => void",
          "default": "\"(realtimeEvent: RealtimeMessageEventType) => {\\n    if (\\n      !this.weavyContext ||\\n      !this.conversation ||\\n      !this.user ||\\n      realtimeEvent.message.app_id !== this.conversation.id ||\\n      realtimeEvent.message.created_by_id === this.user.id\\n    ) {\\n      return;\\n    }\\n\\n    realtimeEvent.message.created_by = realtimeEvent.actor;\\n    addCacheItem(this.weavyContext.queryClient, [\\\"messages\\\", this.conversation.id], realtimeEvent.message);\\n\\n    // mark as read\\n    if (!this.isContextualChat()) {\\n      this.markConversationMutation?.mutate({\\n        id: this.conversation!.id,\\n        markAsRead: true,\\n        messageId: realtimeEvent.message.id,\\n      });\\n    }\\n\\n    // display toast\\n    if (!this.isAtBottom && !this.lastReadMessageId) {\\n      this.lastReadMessageId = realtimeEvent.message.id;\\n      this.lastReadMessagePosition = \\\"top\\\";\\n    }\\n  }\""
        },
        {
          "name": "handleRealtimeReactionAdded",
          "type": "(realtimeEvent: RealtimeReactionEventType) => void",
          "default": "\"(realtimeEvent: RealtimeReactionEventType) => {\\n    if (!this.weavyContext || !this.user || !this.conversation || realtimeEvent.actor.id === this.user.id) {\\n      return;\\n    }\\n\\n    updateCacheItem(\\n      this.weavyContext.queryClient,\\n      [\\\"messages\\\", this.conversation.id],\\n      realtimeEvent.entity.id,\\n      (item: MessageType) => {\\n        item.reactions = [\\n          ...(item.reactions || []),\\n          { content: realtimeEvent.reaction, created_by_id: realtimeEvent.actor.id },\\n        ];\\n      }\\n    );\\n  }\""
        },
        {
          "name": "handleRealtimeReactionDeleted",
          "type": "(realtimeEvent: RealtimeReactionEventType) => void",
          "default": "\"(realtimeEvent: RealtimeReactionEventType) => {\\n    if (!this.weavyContext || !this.conversation || !this.user || realtimeEvent.actor.id === this.user.id) {\\n      return;\\n    }\\n    updateCacheItem(\\n      this.weavyContext.queryClient,\\n      [\\\"messages\\\", this.conversation.id],\\n      realtimeEvent.entity.id,\\n      (item: MessageType) => {\\n        item.reactions = item.reactions.filter((item) => item.created_by_id !== realtimeEvent.actor.id);\\n      }\\n    );\\n  }\""
        },
        {
          "name": "handleRealtimeAppUpdated",
          "type": "(realtimeEvent: RealtimeAppEventType) => void",
          "default": "\"(realtimeEvent: RealtimeAppEventType) => {\\n    if (!this.conversation || realtimeEvent.app.id !== this.conversation.id) {\\n      return;\\n    }\\n\\n    this.conversationTitle = this.conversationTitleInput = realtimeEvent.app.display_name;\\n  }\""
        },
        {
          "name": "handleRealtimeSeenBy",
          "type": "(realtimeEvent: RealtimeConversationMarkedEventType) => void",
          "default": "\"(realtimeEvent: RealtimeConversationMarkedEventType) => {\\n    if (\\n      !this.weavyContext ||\\n      !this.conversation ||\\n      this.isContextualChat() ||\\n      realtimeEvent.conversation.id !== this.conversation.id\\n    ) {\\n      return;\\n    }\\n\\n    updateCacheItem(\\n      this.weavyContext.queryClient,\\n      [\\\"members\\\", this.conversation.id],\\n      realtimeEvent.actor.id,\\n      (item: MemberType) => {\\n        item.marked_id = realtimeEvent.marked_id;\\n        item.marked_at = realtimeEvent.marked_at;\\n      }\\n    );\\n  }\""
        },
        {
          "name": "handleRealtimeDelivered",
          "type": "(realtimeEvent: RealtimeConversationDeliveredEventType) => void",
          "default": "\"(realtimeEvent: RealtimeConversationDeliveredEventType) => {\\n    if (\\n      !this.weavyContext ||\\n      !this.conversation ||\\n      realtimeEvent.actor.id === this.user!.id ||\\n      realtimeEvent.conversation.id !== this.conversation!.id\\n    ) {\\n      return;\\n    }\\n\\n    updateCacheItem(\\n      this.weavyContext.queryClient,\\n      [\\\"members\\\", this.conversation.id],\\n      realtimeEvent.actor.id,\\n      (item: MemberType) => {\\n        item.delivered_at = realtimeEvent.delivered_at;\\n      }\\n    );\\n  }\""
        },
        {
          "name": "isAtBottom",
          "type": "boolean"
        }
      ],
      "events": [
        {
          "name": "release-focus"
        }
      ]
    },
    {
      "name": "wy-dropdown",
      "path": "./../src/components/wy-dropdown.ts",
      "attributes": [
        {
          "name": "directionX",
          "type": "\"left\" | \"right\"",
          "default": "\"right\""
        },
        {
          "name": "directionY",
          "type": "\"up\" | \"down\"",
          "default": "\"down\""
        },
        {
          "name": "icon",
          "type": "string",
          "default": "\"dots-vertical\""
        },
        {
          "name": "noWrapper",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "array",
          "default": "[null,\"dropdownStyles\"]"
        },
        {
          "name": "directionX",
          "attribute": "directionX",
          "type": "\"left\" | \"right\"",
          "default": "\"right\""
        },
        {
          "name": "directionY",
          "attribute": "directionY",
          "type": "\"up\" | \"down\"",
          "default": "\"down\""
        },
        {
          "name": "icon",
          "attribute": "icon",
          "type": "string",
          "default": "\"dots-vertical\""
        },
        {
          "name": "noWrapper",
          "attribute": "noWrapper",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "visible",
          "type": "boolean",
          "default": "false"
        }
      ]
    },
    {
      "name": "wy-dropdown-item",
      "path": "./../src/components/wy-dropdown.ts",
      "attributes": [
        {
          "name": "active",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "array",
          "default": "[\"dropdownStyles\",null]"
        },
        {
          "name": "active",
          "attribute": "active",
          "type": "boolean",
          "default": "false"
        }
      ]
    },
    {
      "name": "wy-dropdown-option",
      "path": "./../src/components/wy-dropdown.ts",
      "attributes": [
        {
          "name": "active",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "selected",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "array",
          "default": "[\"dropdownStyles\",null]"
        },
        {
          "name": "active",
          "attribute": "active",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "selected",
          "attribute": "selected",
          "type": "boolean",
          "default": "false"
        }
      ]
    },
    {
      "name": "wy-dropdown-divider",
      "path": "./../src/components/wy-dropdown.ts",
      "properties": [
        {
          "name": "styles",
          "type": "array",
          "default": "[\"dropdownStyles\",null]"
        }
      ]
    },
    {
      "name": "wy-editor",
      "path": "./../src/components/wy-editor.ts",
      "attributes": [
        {
          "name": "placeholder",
          "type": "string"
        },
        {
          "name": "text",
          "type": "string | undefined",
          "default": "\"\""
        },
        {
          "name": "buttonText",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "typing",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "draft",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "editorType",
          "type": "\"comments\" | \"messages\" | \"posts\"",
          "default": "\"posts\""
        },
        {
          "name": "editorClass",
          "type": "string",
          "default": "\"wy-post-editor\""
        },
        {
          "name": "editorLocation",
          "type": "\"messages\" | \"posts\" | \"apps\" | \"files\"",
          "default": "\"apps\""
        }
      ],
      "properties": [
        {
          "name": "styles",
          "default": "\"chatCss\""
        },
        {
          "name": "app",
          "type": "AppType | undefined"
        },
        {
          "name": "parentId",
          "type": "number | undefined"
        },
        {
          "name": "user",
          "type": "UserType | undefined"
        },
        {
          "name": "placeholder",
          "attribute": "placeholder",
          "type": "string"
        },
        {
          "name": "text",
          "attribute": "text",
          "type": "string | undefined",
          "default": "\"\""
        },
        {
          "name": "embed",
          "type": "EmbedType | undefined"
        },
        {
          "name": "options",
          "type": "PollOptionType[] | undefined",
          "default": "[]"
        },
        {
          "name": "attachments",
          "type": "FileType[]",
          "default": "[]"
        },
        {
          "name": "buttonText",
          "attribute": "buttonText",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "typing",
          "attribute": "typing",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "draft",
          "attribute": "draft",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "editorType",
          "attribute": "editorType",
          "type": "\"comments\" | \"messages\" | \"posts\"",
          "default": "\"posts\""
        },
        {
          "name": "editorClass",
          "attribute": "editorClass",
          "type": "string",
          "default": "\"wy-post-editor\""
        },
        {
          "name": "editorLocation",
          "attribute": "editorLocation",
          "type": "\"messages\" | \"posts\" | \"apps\" | \"files\"",
          "default": "\"apps\""
        },
        {
          "name": "availableFeatures",
          "type": "FeaturesListType | undefined",
          "default": "[]"
        },
        {
          "name": "features",
          "type": "FeaturesConfigType | undefined",
          "default": "{}"
        }
      ],
      "events": [
        {
          "name": "submit"
        }
      ]
    },
    {
      "name": "wy-embed",
      "path": "./../src/components/wy-embed.ts",
      "properties": [
        {
          "name": "styles",
          "default": "\"chatCss\""
        },
        {
          "name": "embed",
          "type": "EmbedType"
        },
        {
          "name": "enableSwap",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "embed-remove"
        },
        {
          "name": "embed-swap"
        }
      ]
    },
    {
      "name": "wy-empty",
      "path": "./../src/components/wy-empty.ts",
      "attributes": [
        {
          "name": "noNetwork",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "array",
          "default": "[\"chatCss\",null]"
        },
        {
          "name": "noNetwork",
          "attribute": "noNetwork",
          "type": "boolean",
          "default": "false"
        }
      ]
    },
    {
      "name": "wy-file-item",
      "path": "./../src/components/wy-file-item.ts",
      "attributes": [
        {
          "name": "file",
          "type": "FileType | undefined"
        },
        {
          "name": "availableFeatures",
          "type": "FeaturesListType | undefined",
          "default": "[]"
        },
        {
          "name": "features",
          "type": "FeaturesConfigType | undefined",
          "default": "{}"
        },
        {
          "name": "status",
          "type": "FileStatusType",
          "default": "{\"state\":\"ok\"}"
        },
        {
          "name": "hasHover",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "actionType",
          "type": "FileActionType | undefined"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "default": "\"filesCss\""
        },
        {
          "name": "file",
          "attribute": "file",
          "type": "FileType | undefined"
        },
        {
          "name": "availableFeatures",
          "attribute": "availableFeatures",
          "type": "FeaturesListType | undefined",
          "default": "[]"
        },
        {
          "name": "features",
          "attribute": "features",
          "type": "FeaturesConfigType | undefined",
          "default": "{}"
        },
        {
          "name": "status",
          "attribute": "status",
          "type": "FileStatusType",
          "default": "{\"state\":\"ok\"}"
        },
        {
          "name": "hasHover",
          "attribute": "hasHover",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "actionType",
          "attribute": "actionType",
          "type": "FileActionType | undefined"
        },
        {
          "name": "isRenaming",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "edit-name"
        },
        {
          "name": "rename"
        },
        {
          "name": "trash"
        },
        {
          "name": "restore"
        },
        {
          "name": "delete-forever"
        },
        {
          "name": "subscribe"
        }
      ]
    },
    {
      "name": "wy-file-menu",
      "path": "./../src/components/wy-file-menu.ts",
      "attributes": [
        {
          "name": "file",
          "type": "FileType | undefined"
        },
        {
          "name": "availableFeatures",
          "type": "FeaturesListType | undefined",
          "default": "[]"
        },
        {
          "name": "features",
          "type": "FeaturesConfigType | undefined",
          "default": "{}"
        },
        {
          "name": "noWrapper",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hasEventListener",
          "type": "{ [key: string]: boolean; }",
          "default": "{\"edit-name\":false,\"subscribe\":false,\"trash\":false,\"restore\":false,\"delete-forever\":false}"
        }
      ],
      "properties": [
        {
          "name": "file",
          "attribute": "file",
          "type": "FileType | undefined"
        },
        {
          "name": "availableFeatures",
          "attribute": "availableFeatures",
          "type": "FeaturesListType | undefined",
          "default": "[]"
        },
        {
          "name": "features",
          "attribute": "features",
          "type": "FeaturesConfigType | undefined",
          "default": "{}"
        },
        {
          "name": "noWrapper",
          "attribute": "noWrapper",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hasEventListener",
          "attribute": "hasEventListener",
          "type": "{ [key: string]: boolean; }",
          "default": "{\"edit-name\":false,\"subscribe\":false,\"trash\":false,\"restore\":false,\"delete-forever\":false}"
        }
      ],
      "events": [
        {
          "name": "edit-name"
        },
        {
          "name": "subscribe"
        },
        {
          "name": "trash"
        },
        {
          "name": "restore"
        },
        {
          "name": "delete-forever"
        }
      ]
    },
    {
      "name": "wy-file-versions",
      "path": "./../src/components/wy-file-versions.ts",
      "attributes": [
        {
          "name": "features",
          "type": "FeaturesConfigType | undefined",
          "default": "{}"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "default": "\"filesCss\""
        },
        {
          "name": "app",
          "type": "AppType"
        },
        {
          "name": "file",
          "type": "FileType"
        },
        {
          "name": "activeVersion",
          "type": "FileType | undefined"
        },
        {
          "name": "features",
          "attribute": "features",
          "type": "FeaturesConfigType | undefined",
          "default": "{}"
        },
        {
          "name": "availableFeatures",
          "type": "FeaturesListType | undefined",
          "default": "[]"
        }
      ],
      "events": [
        {
          "name": "file-version-select"
        }
      ]
    },
    {
      "name": "wy-files-appbar",
      "path": "./../src/components/wy-files-appbar.ts",
      "attributes": [
        {
          "name": "app",
          "type": "AppType | undefined"
        },
        {
          "name": "user",
          "type": "UserType | undefined"
        },
        {
          "name": "availableFeatures",
          "type": "FeaturesListType | undefined",
          "default": "[]"
        },
        {
          "name": "features",
          "type": "FeaturesConfigType",
          "default": "{}"
        },
        {
          "name": "order",
          "type": "FileOrderType",
          "default": "{\"by\":\"name\",\"descending\":false}"
        },
        {
          "name": "view",
          "type": "\"grid\" | \"list\"",
          "default": "\"list\""
        },
        {
          "name": "showTrashed",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "array",
          "default": "[\"filesCss\"]"
        },
        {
          "name": "app",
          "attribute": "app",
          "type": "AppType | undefined"
        },
        {
          "name": "user",
          "attribute": "user",
          "type": "UserType | undefined"
        },
        {
          "name": "availableFeatures",
          "attribute": "availableFeatures",
          "type": "FeaturesListType | undefined",
          "default": "[]"
        },
        {
          "name": "features",
          "attribute": "features",
          "type": "FeaturesConfigType",
          "default": "{}"
        },
        {
          "name": "order",
          "attribute": "order",
          "type": "FileOrderType",
          "default": "{\"by\":\"name\",\"descending\":false}"
        },
        {
          "name": "view",
          "attribute": "view",
          "type": "\"grid\" | \"list\"",
          "default": "\"list\""
        },
        {
          "name": "showTrashed",
          "attribute": "showTrashed",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "showUploadSheet",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "upload-files"
        },
        {
          "name": "external-blobs"
        },
        {
          "name": "create-files"
        },
        {
          "name": "order"
        },
        {
          "name": "view"
        },
        {
          "name": "show-trashed"
        },
        {
          "name": "subscribe"
        },
        {
          "name": "release-focus"
        }
      ]
    },
    {
      "name": "wy-files-list",
      "path": "./../src/components/wy-files-list.ts",
      "attributes": [
        {
          "name": "dataUpdatedAt",
          "type": "number | undefined"
        },
        {
          "name": "view",
          "type": "FileViewType",
          "default": "\"list\""
        },
        {
          "name": "isRenamingId",
          "type": "number | undefined",
          "default": "\"NaN\""
        },
        {
          "name": "features",
          "type": "FeaturesConfigType | undefined",
          "default": "{}"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "default": "\"filesCss\""
        },
        {
          "name": "files",
          "type": "FileType[] | undefined"
        },
        {
          "name": "dataUpdatedAt",
          "attribute": "dataUpdatedAt",
          "type": "number | undefined"
        },
        {
          "name": "order",
          "type": "FileOrderType",
          "default": "{\"by\":\"name\",\"descending\":false}"
        },
        {
          "name": "view",
          "attribute": "view",
          "type": "FileViewType",
          "default": "\"list\""
        },
        {
          "name": "isRenamingId",
          "attribute": "isRenamingId",
          "type": "number | undefined",
          "default": "\"NaN\""
        },
        {
          "name": "features",
          "attribute": "features",
          "type": "FeaturesConfigType | undefined",
          "default": "{}"
        },
        {
          "name": "availableFeatures",
          "type": "FeaturesListType | undefined",
          "default": "[]"
        }
      ],
      "events": [
        {
          "name": "file-open"
        },
        {
          "name": "order"
        },
        {
          "name": "edit-name"
        },
        {
          "name": "rename"
        },
        {
          "name": "trash"
        },
        {
          "name": "restore"
        },
        {
          "name": "delete-forever"
        },
        {
          "name": "subscribe"
        }
      ]
    },
    {
      "name": "wy-icon",
      "path": "./../src/components/wy-icon.ts",
      "attributes": [
        {
          "name": "name",
          "type": "string | undefined"
        },
        {
          "name": "color",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "size",
          "type": "number",
          "default": "24"
        },
        {
          "name": "kind",
          "type": "string | undefined"
        },
        {
          "name": "ext",
          "type": "string | undefined"
        },
        {
          "name": "inline",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "first",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "last",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "padded",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "array",
          "default": "[\"allStyles\",null]"
        },
        {
          "name": "name",
          "attribute": "name",
          "type": "string | undefined"
        },
        {
          "name": "color",
          "attribute": "color",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "size",
          "attribute": "size",
          "type": "number",
          "default": "24"
        },
        {
          "name": "kind",
          "attribute": "kind",
          "type": "string | undefined"
        },
        {
          "name": "ext",
          "attribute": "ext",
          "type": "string | undefined"
        },
        {
          "name": "path",
          "type": "string",
          "default": "\"mdiSelect\""
        },
        {
          "name": "overlayPath",
          "type": "string | undefined"
        },
        {
          "name": "inline",
          "attribute": "inline",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "first",
          "attribute": "first",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "last",
          "attribute": "last",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "padded",
          "attribute": "padded",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "nativeIconColor",
          "type": "string | undefined"
        },
        {
          "name": "nativeOverlayColor",
          "type": "string | undefined"
        }
      ]
    },
    {
      "name": "wy-image-grid",
      "path": "./../src/components/wy-image-grid.ts",
      "attributes": [
        {
          "name": "limit",
          "type": "number",
          "default": "3"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "default": "\"chatCss\""
        },
        {
          "name": "images",
          "type": "FileType[]",
          "default": "[]"
        },
        {
          "name": "limit",
          "attribute": "limit",
          "type": "number",
          "default": "3"
        }
      ],
      "events": [
        {
          "name": "file-open"
        }
      ]
    },
    {
      "name": "wy-meeting-card",
      "path": "./../src/components/wy-meeting-card.ts",
      "properties": [
        {
          "name": "styles",
          "default": "\"chatCss\""
        },
        {
          "name": "meeting",
          "type": "MeetingType"
        }
      ]
    },
    {
      "name": "wy-message-editor",
      "path": "./../src/components/wy-message-editor.ts",
      "attributes": [
        {
          "name": "placeholder",
          "type": "string"
        },
        {
          "name": "text",
          "type": "string | undefined",
          "default": "\"\""
        },
        {
          "name": "buttonText",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "typing",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "draft",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "editorType",
          "type": "string",
          "default": "\"messages\""
        },
        {
          "name": "editorClass",
          "type": "string",
          "default": "\"wy-message-editor\""
        },
        {
          "name": "editorLocation",
          "type": "\"messages\" | \"posts\" | \"apps\" | \"files\"",
          "default": "\"apps\""
        }
      ],
      "properties": [
        {
          "name": "styles",
          "default": "\"chatCss\""
        },
        {
          "name": "app",
          "type": "AppType | undefined"
        },
        {
          "name": "parentId",
          "type": "number | undefined"
        },
        {
          "name": "user",
          "type": "UserType | undefined"
        },
        {
          "name": "placeholder",
          "attribute": "placeholder",
          "type": "string"
        },
        {
          "name": "text",
          "attribute": "text",
          "type": "string | undefined",
          "default": "\"\""
        },
        {
          "name": "embed",
          "type": "EmbedType | undefined"
        },
        {
          "name": "options",
          "type": "PollOptionType[] | undefined",
          "default": "[]"
        },
        {
          "name": "attachments",
          "type": "FileType[]",
          "default": "[]"
        },
        {
          "name": "buttonText",
          "attribute": "buttonText",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "typing",
          "attribute": "typing",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "draft",
          "attribute": "draft",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "editorType",
          "attribute": "editorType",
          "type": "string",
          "default": "\"messages\""
        },
        {
          "name": "editorClass",
          "attribute": "editorClass",
          "type": "string",
          "default": "\"wy-message-editor\""
        },
        {
          "name": "editorLocation",
          "attribute": "editorLocation",
          "type": "\"messages\" | \"posts\" | \"apps\" | \"files\"",
          "default": "\"apps\""
        },
        {
          "name": "availableFeatures",
          "type": "FeaturesListType | undefined",
          "default": "[]"
        },
        {
          "name": "features",
          "type": "FeaturesConfigType | undefined",
          "default": "{}"
        }
      ],
      "events": [
        {
          "name": "submit"
        }
      ]
    },
    {
      "name": "wy-message",
      "path": "./../src/components/wy-message.ts",
      "attributes": [
        {
          "name": "app",
          "type": "AppType"
        },
        {
          "name": "messageId",
          "type": "number"
        },
        {
          "name": "me",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "chatRoom",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "temp",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "sent",
          "type": "boolean | null | undefined"
        },
        {
          "name": "delivered",
          "type": "boolean | null | undefined"
        },
        {
          "name": "displayName",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "avatar",
          "type": "string | undefined",
          "default": "\"\""
        },
        {
          "name": "createdAt",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "html",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "text",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "attachments",
          "type": "FileType[]",
          "default": "[]"
        },
        {
          "name": "reactions",
          "type": "ReactableType[]",
          "default": "[]"
        },
        {
          "name": "seenBy",
          "type": "MemberType[]",
          "default": "[]"
        },
        {
          "name": "userId",
          "type": "number",
          "default": "-1"
        },
        {
          "name": "features",
          "type": "FeaturesConfigType | undefined",
          "default": "{}"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "default": "\"chatCss\""
        },
        {
          "name": "app",
          "attribute": "app",
          "type": "AppType"
        },
        {
          "name": "messageId",
          "attribute": "messageId",
          "type": "number"
        },
        {
          "name": "me",
          "attribute": "me",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "chatRoom",
          "attribute": "chatRoom",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "temp",
          "attribute": "temp",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "sent",
          "attribute": "sent",
          "type": "boolean | null | undefined"
        },
        {
          "name": "delivered",
          "attribute": "delivered",
          "type": "boolean | null | undefined"
        },
        {
          "name": "displayName",
          "attribute": "displayName",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "avatar",
          "attribute": "avatar",
          "type": "string | undefined",
          "default": "\"\""
        },
        {
          "name": "createdAt",
          "attribute": "createdAt",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "html",
          "attribute": "html",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "text",
          "attribute": "text",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "attachments",
          "attribute": "attachments",
          "type": "FileType[]",
          "default": "[]"
        },
        {
          "name": "meeting",
          "type": "MeetingType | undefined"
        },
        {
          "name": "embed",
          "type": "EmbedType | undefined"
        },
        {
          "name": "reactions",
          "attribute": "reactions",
          "type": "ReactableType[]",
          "default": "[]"
        },
        {
          "name": "seenBy",
          "attribute": "seenBy",
          "type": "MemberType[]",
          "default": "[]"
        },
        {
          "name": "userId",
          "attribute": "userId",
          "type": "number",
          "default": "-1"
        },
        {
          "name": "availableFeatures",
          "type": "FeaturesListType | undefined"
        },
        {
          "name": "features",
          "attribute": "features",
          "type": "FeaturesConfigType | undefined",
          "default": "{}"
        }
      ]
    },
    {
      "name": "wy-messages",
      "path": "./../src/components/wy-messages.ts",
      "attributes": [
        {
          "name": "dataUpdatedAt",
          "type": "number",
          "default": "\"NaN\""
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "array",
          "default": "[\"chatCss\",null]"
        },
        {
          "name": "app",
          "type": "AppType"
        },
        {
          "name": "infiniteMessages",
          "type": "InfiniteData<MessagesResultType, unknown>"
        },
        {
          "name": "dataUpdatedAt",
          "attribute": "dataUpdatedAt",
          "type": "number",
          "default": "\"NaN\""
        },
        {
          "name": "user",
          "type": "UserType"
        },
        {
          "name": "members",
          "type": "MembersResultType | undefined"
        },
        {
          "name": "availableFeatures",
          "type": "FeaturesListType | undefined"
        },
        {
          "name": "features",
          "type": "FeaturesConfigType | undefined"
        },
        {
          "name": "unreadMarkerId",
          "type": "number | undefined"
        },
        {
          "name": "unreadMarkerPosition",
          "type": "\"top\" | \"bottom\" | undefined"
        },
        {
          "name": "pagerRef",
          "type": "Ref<Element>",
          "default": "\"createRef()\""
        }
      ],
      "events": [
        {
          "name": "scroll-to-bottom"
        }
      ]
    },
    {
      "name": "wy-overlay",
      "path": "./../src/components/wy-overlay.ts",
      "description": "Overlay wrapper for displaying in portal.",
      "attributes": [
        {
          "name": "open",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "maximized",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "header",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "default": "\"overlayStyles\""
        },
        {
          "name": "open",
          "attribute": "open",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "maximized",
          "attribute": "maximized",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "header",
          "attribute": "header",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "releaseFocusEvent",
          "description": "A keyboard-consuming element releases focus.",
          "type": "() => CustomEvent<undefined>",
          "default": "\"() => new CustomEvent<undefined>(\\\"release-focus\\\", { bubbles: true, composed: true })\""
        },
        {
          "name": "removeModalEvent",
          "description": "A modal should be closed.",
          "type": "() => Event",
          "default": "\"() => new Event(\\\"removeModal\\\", { bubbles: true, composed: true })\""
        },
        {
          "name": "handleKeys",
          "type": "(e: KeyboardEvent) => void",
          "default": "\"(e: KeyboardEvent) => {\\n    if (this.open) {\\n      if (e.key === \\\"Escape\\\") {\\n        e.stopImmediatePropagation();\\n        this.close();\\n      }\\n    }\\n  }\""
        }
      ],
      "events": [
        {
          "name": "release-focus"
        },
        {
          "name": "removeModal"
        }
      ]
    },
    {
      "name": "wy-pdf-viewer",
      "path": "./../src/components/wy-pdf-viewer.ts",
      "attributes": [
        {
          "name": "src",
          "type": "string"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "array",
          "default": "[\"allCss\",null]"
        },
        {
          "name": "DEFAULT_SCALE_DELTA",
          "type": "number",
          "default": "1.1"
        },
        {
          "name": "MAX_SCALE",
          "type": "number",
          "default": "3"
        },
        {
          "name": "MIN_SCALE",
          "type": "number",
          "default": "0.2"
        },
        {
          "name": "SEARCH_FOR",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "ENABLE_XFA",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "CMAP_URL",
          "type": "URL | undefined"
        },
        {
          "name": "CMAP_PACKED",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "WORKER_URL",
          "type": "URL | undefined"
        },
        {
          "name": "src",
          "attribute": "src",
          "type": "string"
        },
        {
          "name": "pageNumberRef",
          "type": "Ref<HTMLInputElement>",
          "default": "\"createRef<HTMLInputElement>()\""
        },
        {
          "name": "totalPagesRef",
          "type": "Ref<HTMLSpanElement>",
          "default": "\"createRef<HTMLSpanElement>()\""
        },
        {
          "name": "zoomLevelRef",
          "type": "Ref<HTMLInputElement>",
          "default": "\"createRef<HTMLInputElement>()\""
        },
        {
          "name": "viewerContainerRef",
          "type": "Ref<HTMLDivElement>",
          "default": "\"createRef<HTMLDivElement>()\""
        },
        {
          "name": "pdfViewer",
          "type": "PDFViewer | undefined"
        },
        {
          "name": "pdfEventBus",
          "type": "EventBus",
          "default": "\"new EventBus()\""
        },
        {
          "name": "pdfLinkService",
          "type": "PDFLinkService",
          "default": "\"new PDFLinkService({\\n    eventBus: this.pdfEventBus,\\n  })\""
        },
        {
          "name": "pdfFindController",
          "type": "PDFFindController",
          "default": "\"new PDFFindController({\\n    eventBus: this.pdfEventBus,\\n    linkService: this.pdfLinkService,\\n  })\""
        }
      ]
    },
    {
      "name": "wy-poll-option",
      "path": "./../src/components/wy-poll-option.ts",
      "properties": [
        {
          "name": "styles",
          "default": "\"chatCss\""
        },
        {
          "name": "totalVotes",
          "type": "number"
        },
        {
          "name": "option",
          "type": "PollOptionType"
        },
        {
          "name": "getVotesQuery",
          "type": "QueryController<UserType[]>",
          "default": "\"new QueryController<UserType[]>(this)\""
        }
      ],
      "events": [
        {
          "name": "vote"
        },
        {
          "name": "wy-global-sheets-remove"
        },
        {
          "name": "release-focus"
        }
      ]
    },
    {
      "name": "wy-poll",
      "path": "./../src/components/wy-poll.ts",
      "properties": [
        {
          "name": "styles",
          "default": "\"chatCss\""
        },
        {
          "name": "pollOptions",
          "type": "PollOptionType[]",
          "default": "[]"
        }
      ],
      "events": [
        {
          "name": "vote"
        }
      ]
    },
    {
      "name": "wy-portal",
      "path": "./../src/components/wy-portal.ts",
      "properties": [
        {
          "name": "modalNodes",
          "type": "HTMLCollection | undefined"
        },
        {
          "name": "enabledWarnings",
          "description": "Read or set all the enabled warning categories for this class.\n\nThis property is only used in development builds.",
          "type": "WarningKind[] | undefined"
        },
        {
          "name": "enableWarning",
          "description": "Enable the given warning category for this class.\n\nThis method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Enable for all ReactiveElement subclasses\nReactiveElement.enableWarning?.('migration');\n\n// Enable for only MyElement and subclasses\nMyElement.enableWarning?.('migration');\n```",
          "type": "((warningKind: WarningKind) => void) | undefined"
        },
        {
          "name": "disableWarning",
          "description": "Disable the given warning category for this class.\n\nThis method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Disable for all ReactiveElement subclasses\nReactiveElement.disableWarning?.('migration');\n\n// Disable for only MyElement and subclasses\nMyElement.disableWarning?.('migration');\n```",
          "type": "((warningKind: WarningKind) => void) | undefined"
        },
        {
          "name": "elementProperties",
          "description": "Memoized list of all element properties, including any superclass properties.\nCreated lazily on user subclasses when finalizing the class.",
          "type": "PropertyDeclarationMap"
        },
        {
          "name": "properties",
          "description": "User-supplied object that maps property names to `PropertyDeclaration`\nobjects containing options for configuring reactive properties. When\na reactive property is set the element will update and render.\n\nBy default properties are public fields, and as such, they should be\nconsidered as primarily settable by element users, either via attribute or\nthe property itself.\n\nGenerally, properties that are changed by the element should be private or\nprotected fields and should use the `state: true` option. Properties\nmarked as `state` do not reflect from the corresponding attribute\n\nHowever, sometimes element code does need to set a public property. This\nshould typically only be done in response to user interaction, and an event\nshould be fired informing the user; for example, a checkbox sets its\n`checked` property when clicked and fires a `changed` event. Mutating\npublic properties should typically not be done for non-primitive (object or\narray) properties. In other cases when an element needs to manage state, a\nprivate property set with the `state: true` option should be used. When\nneeded, state properties can be initialized via public properties to\nfacilitate complex interactions.",
          "type": "PropertyDeclarations"
        },
        {
          "name": "elementStyles",
          "description": "Memoized list of all element styles.\nCreated lazily on user subclasses when finalizing the class.",
          "type": "CSSResultOrNative[]"
        },
        {
          "name": "styles",
          "description": "[object Object],[object Object],[object Object]",
          "default": "\"portalStyles\""
        },
        {
          "name": "shadowRootOptions",
          "description": "Options used when calling `attachShadow`. Set this property to customize\nthe options for the shadowRoot; for example, to create a closed\nshadowRoot: `{mode: 'closed'}`.\n\nNote, these options are used in `createRenderRoot`. If this method\nis customized, options should be respected if possible.",
          "type": "ShadowRootInit"
        },
        {
          "name": "renderRoot",
          "description": "Node or ShadowRoot into which element DOM should be rendered. Defaults\nto an open shadowRoot.",
          "type": "HTMLElement | ShadowRoot"
        },
        {
          "name": "isUpdatePending",
          "description": "True if there is a pending update as a result of calling `requestUpdate()`.\nShould only be read.",
          "type": "boolean"
        },
        {
          "name": "hasUpdated",
          "description": "Is set to `true` after the first update. The element code cannot assume\nthat `renderRoot` exists before the element `hasUpdated`.",
          "type": "boolean"
        },
        {
          "name": "updateComplete",
          "description": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.\n\nTo await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.",
          "type": "Promise<boolean>"
        }
      ]
    },
    {
      "name": "wy-post-edit",
      "path": "./../src/components/wy-post-edit.ts",
      "attributes": [
        {
          "name": "postId",
          "type": "number"
        },
        {
          "name": "temp",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "createdAt",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "modifiedAt",
          "type": "string | undefined",
          "default": "\"undefined\""
        },
        {
          "name": "isSubscribed",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "isTrashed",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "text",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "attachments",
          "type": "FileType[]",
          "default": "[]"
        },
        {
          "name": "pollOptions",
          "type": "PollOptionType[] | undefined",
          "default": "[]"
        },
        {
          "name": "reactions",
          "type": "ReactableType[]",
          "default": "[]"
        },
        {
          "name": "seenBy",
          "type": "MemberType[]",
          "default": "[]"
        },
        {
          "name": "userId",
          "type": "number",
          "default": "-1"
        },
        {
          "name": "features",
          "type": "FeaturesConfigType",
          "default": "{}"
        },
        {
          "name": "availableFeatures",
          "type": "FeaturesListType | undefined"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "default": "\"chatCss\""
        },
        {
          "name": "app",
          "type": "AppType"
        },
        {
          "name": "user",
          "type": "UserType"
        },
        {
          "name": "postId",
          "attribute": "postId",
          "type": "number"
        },
        {
          "name": "temp",
          "attribute": "temp",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "createdBy",
          "type": "MemberType"
        },
        {
          "name": "createdAt",
          "attribute": "createdAt",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "modifiedAt",
          "attribute": "modifiedAt",
          "type": "string | undefined",
          "default": "\"undefined\""
        },
        {
          "name": "isSubscribed",
          "attribute": "isSubscribed",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "isTrashed",
          "attribute": "isTrashed",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "text",
          "attribute": "text",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "attachments",
          "attribute": "attachments",
          "type": "FileType[]",
          "default": "[]"
        },
        {
          "name": "pollOptions",
          "attribute": "pollOptions",
          "type": "PollOptionType[] | undefined",
          "default": "[]"
        },
        {
          "name": "meeting",
          "type": "MeetingType | undefined"
        },
        {
          "name": "embed",
          "type": "EmbedType | undefined"
        },
        {
          "name": "reactions",
          "attribute": "reactions",
          "type": "ReactableType[]",
          "default": "[]"
        },
        {
          "name": "seenBy",
          "attribute": "seenBy",
          "type": "MemberType[]",
          "default": "[]"
        },
        {
          "name": "userId",
          "attribute": "userId",
          "type": "number",
          "default": "-1"
        },
        {
          "name": "features",
          "attribute": "features",
          "type": "FeaturesConfigType",
          "default": "{}"
        },
        {
          "name": "availableFeatures",
          "attribute": "availableFeatures",
          "type": "FeaturesListType | undefined"
        }
      ],
      "events": [
        {
          "name": "edit"
        }
      ]
    },
    {
      "name": "wy-post-trashed",
      "path": "./../src/components/wy-post-trashed.ts",
      "attributes": [
        {
          "name": "postId",
          "type": "number"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "default": "\"chatCss\""
        },
        {
          "name": "postId",
          "attribute": "postId",
          "type": "number"
        }
      ],
      "events": [
        {
          "name": "restore"
        }
      ]
    },
    {
      "name": "wy-post-view",
      "path": "./../src/components/wy-post-view.ts",
      "attributes": [
        {
          "name": "postId",
          "type": "number"
        },
        {
          "name": "temp",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "createdAt",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "modifiedAt",
          "type": "string | undefined",
          "default": "\"undefined\""
        },
        {
          "name": "isSubscribed",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "isTrashed",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "html",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "text",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "attachments",
          "type": "FileType[]",
          "default": "[]"
        },
        {
          "name": "pollOptions",
          "type": "PollOptionType[] | undefined",
          "default": "[]"
        },
        {
          "name": "reactions",
          "type": "ReactableType[]",
          "default": "[]"
        },
        {
          "name": "seenBy",
          "type": "MemberType[]",
          "default": "[]"
        },
        {
          "name": "features",
          "type": "FeaturesConfigType",
          "default": "{}"
        },
        {
          "name": "availableFeatures",
          "type": "FeaturesListType | undefined"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "array",
          "default": "[\"chatCss\",null]"
        },
        {
          "name": "app",
          "type": "AppType"
        },
        {
          "name": "user",
          "type": "UserType"
        },
        {
          "name": "postId",
          "attribute": "postId",
          "type": "number"
        },
        {
          "name": "temp",
          "attribute": "temp",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "createdBy",
          "type": "MemberType"
        },
        {
          "name": "createdAt",
          "attribute": "createdAt",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "modifiedAt",
          "attribute": "modifiedAt",
          "type": "string | undefined",
          "default": "\"undefined\""
        },
        {
          "name": "isSubscribed",
          "attribute": "isSubscribed",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "isTrashed",
          "attribute": "isTrashed",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "html",
          "attribute": "html",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "text",
          "attribute": "text",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "attachments",
          "attribute": "attachments",
          "type": "FileType[]",
          "default": "[]"
        },
        {
          "name": "pollOptions",
          "attribute": "pollOptions",
          "type": "PollOptionType[] | undefined",
          "default": "[]"
        },
        {
          "name": "meeting",
          "type": "MeetingType | undefined"
        },
        {
          "name": "embed",
          "type": "EmbedType | undefined"
        },
        {
          "name": "reactions",
          "attribute": "reactions",
          "type": "ReactableType[]",
          "default": "[]"
        },
        {
          "name": "commentCount",
          "type": "number",
          "default": "0"
        },
        {
          "name": "seenBy",
          "attribute": "seenBy",
          "type": "MemberType[]",
          "default": "[]"
        },
        {
          "name": "features",
          "attribute": "features",
          "type": "FeaturesConfigType",
          "default": "{}"
        },
        {
          "name": "availableFeatures",
          "attribute": "availableFeatures",
          "type": "FeaturesListType | undefined"
        }
      ],
      "events": [
        {
          "name": "vote"
        },
        {
          "name": "subscribe"
        },
        {
          "name": "trash"
        },
        {
          "name": "edit"
        }
      ]
    },
    {
      "name": "wy-post",
      "path": "./../src/components/wy-post.ts",
      "attributes": [
        {
          "name": "postId",
          "type": "number"
        },
        {
          "name": "temp",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "createdAt",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "modifiedAt",
          "type": "string | undefined",
          "default": "\"undefined\""
        },
        {
          "name": "isSubscribed",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "isTrashed",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "html",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "text",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "plain",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "pollOptions",
          "type": "PollOptionType[] | undefined",
          "default": "[]"
        },
        {
          "name": "reactions",
          "type": "ReactableType[]",
          "default": "[]"
        },
        {
          "name": "seenBy",
          "type": "MemberType[]",
          "default": "[]"
        },
        {
          "name": "features",
          "type": "FeaturesConfigType",
          "default": "{}"
        },
        {
          "name": "availableFeatures",
          "type": "FeaturesListType | undefined"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "default": "\"chatCss\""
        },
        {
          "name": "app",
          "type": "AppType"
        },
        {
          "name": "user",
          "type": "UserType"
        },
        {
          "name": "postId",
          "attribute": "postId",
          "type": "number"
        },
        {
          "name": "temp",
          "attribute": "temp",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "createdBy",
          "type": "MemberType"
        },
        {
          "name": "createdAt",
          "attribute": "createdAt",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "modifiedAt",
          "attribute": "modifiedAt",
          "type": "string | undefined",
          "default": "\"undefined\""
        },
        {
          "name": "isSubscribed",
          "attribute": "isSubscribed",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "isTrashed",
          "attribute": "isTrashed",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "html",
          "attribute": "html",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "text",
          "attribute": "text",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "plain",
          "attribute": "plain",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "attachments",
          "type": "FileType[]",
          "default": "[]"
        },
        {
          "name": "pollOptions",
          "attribute": "pollOptions",
          "type": "PollOptionType[] | undefined",
          "default": "[]"
        },
        {
          "name": "meeting",
          "type": "MeetingType | undefined"
        },
        {
          "name": "embed",
          "type": "EmbedType | undefined"
        },
        {
          "name": "reactions",
          "attribute": "reactions",
          "type": "ReactableType[]",
          "default": "[]"
        },
        {
          "name": "commentCount",
          "type": "number",
          "default": "0"
        },
        {
          "name": "seenBy",
          "attribute": "seenBy",
          "type": "MemberType[]",
          "default": "[]"
        },
        {
          "name": "features",
          "attribute": "features",
          "type": "FeaturesConfigType",
          "default": "{}"
        },
        {
          "name": "availableFeatures",
          "attribute": "availableFeatures",
          "type": "FeaturesListType | undefined"
        }
      ],
      "events": [
        {
          "name": "vote"
        },
        {
          "name": "subscribe"
        },
        {
          "name": "trash"
        },
        {
          "name": "restore"
        }
      ]
    },
    {
      "name": "wy-presence",
      "path": "./../src/components/wy-presence.ts",
      "attributes": [
        {
          "name": "placement",
          "type": "\"avatar\" | \"text\"",
          "default": "\"avatar\""
        },
        {
          "name": "status",
          "type": "PresenceType | undefined"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "array",
          "default": "[\"chatCss\",null]"
        },
        {
          "name": "placement",
          "attribute": "placement",
          "type": "\"avatar\" | \"text\"",
          "default": "\"avatar\""
        },
        {
          "name": "status",
          "attribute": "status",
          "type": "PresenceType | undefined"
        }
      ]
    },
    {
      "name": "wy-preview-embed",
      "path": "./../src/components/wy-preview-embed.ts",
      "attributes": [
        {
          "name": "src",
          "type": "string"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "icon",
          "type": "string"
        },
        {
          "name": "provider",
          "type": "string | undefined"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "array",
          "default": "[\"allCss\",null]"
        },
        {
          "name": "src",
          "attribute": "src",
          "type": "string"
        },
        {
          "name": "name",
          "attribute": "name",
          "type": "string"
        },
        {
          "name": "icon",
          "attribute": "icon",
          "type": "string"
        },
        {
          "name": "provider",
          "attribute": "provider",
          "type": "string | undefined"
        },
        {
          "name": "embedElement",
          "type": "Element | undefined"
        },
        {
          "name": "unregisterLoading",
          "type": "(() => void) | undefined"
        }
      ]
    },
    {
      "name": "wy-preview-icon",
      "path": "./../src/components/wy-preview-icon.ts",
      "attributes": [
        {
          "name": "src",
          "type": "string"
        },
        {
          "name": "icon",
          "type": "string"
        },
        {
          "name": "provider",
          "type": "string | undefined"
        },
        {
          "name": "iconClass",
          "type": "string | undefined"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "array",
          "default": "[\"allCss\",null]"
        },
        {
          "name": "src",
          "attribute": "src",
          "type": "string"
        },
        {
          "name": "icon",
          "attribute": "icon",
          "type": "string"
        },
        {
          "name": "provider",
          "attribute": "provider",
          "type": "string | undefined"
        },
        {
          "name": "iconClass",
          "attribute": "iconClass",
          "type": "string | undefined"
        }
      ]
    },
    {
      "name": "wy-preview-image",
      "path": "./../src/components/wy-preview-image.ts",
      "attributes": [
        {
          "name": "src",
          "type": "string"
        },
        {
          "name": "width",
          "type": "number | undefined"
        },
        {
          "name": "height",
          "type": "number | undefined"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "array",
          "default": "[\"allCss\",null]"
        },
        {
          "name": "src",
          "attribute": "src",
          "type": "string"
        },
        {
          "name": "width",
          "attribute": "width",
          "type": "number | undefined"
        },
        {
          "name": "height",
          "attribute": "height",
          "type": "number | undefined"
        }
      ]
    },
    {
      "name": "wy-preview-item",
      "path": "./../src/components/wy-preview-item.ts",
      "attributes": [
        {
          "name": "file",
          "type": "FileType | undefined"
        },
        {
          "name": "availableFeatures",
          "type": "FeaturesListType",
          "default": "[]"
        },
        {
          "name": "features",
          "type": "FeaturesConfigType",
          "default": "{}"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "array",
          "default": "[\"allCss\",null]"
        },
        {
          "name": "file",
          "attribute": "file",
          "type": "FileType | undefined"
        },
        {
          "name": "availableFeatures",
          "attribute": "availableFeatures",
          "type": "FeaturesListType",
          "default": "[]"
        },
        {
          "name": "features",
          "attribute": "features",
          "type": "FeaturesConfigType",
          "default": "{}"
        }
      ]
    },
    {
      "name": "wy-preview-media",
      "path": "./../src/components/wy-preview-media.ts",
      "attributes": [
        {
          "name": "format",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "src",
          "type": "string"
        },
        {
          "name": "name",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "mediaType",
          "type": "string | undefined"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "array",
          "default": "[\"allCss\",null]"
        },
        {
          "name": "format",
          "attribute": "format",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "src",
          "attribute": "src",
          "type": "string"
        },
        {
          "name": "name",
          "attribute": "name",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "mediaType",
          "attribute": "mediaType",
          "type": "string | undefined"
        },
        {
          "name": "mediaElement",
          "type": "HTMLMediaElement | undefined"
        }
      ]
    },
    {
      "name": "wy-preview-text",
      "path": "./../src/components/wy-preview-text.ts",
      "attributes": [
        {
          "name": "src",
          "type": "string"
        },
        {
          "name": "html",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "code",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "array",
          "default": "[\"allCss\",null]"
        },
        {
          "name": "src",
          "attribute": "src",
          "type": "string"
        },
        {
          "name": "html",
          "attribute": "html",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "code",
          "attribute": "code",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "textOrHtmlContent",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "loading",
          "type": "boolean",
          "default": "true"
        }
      ]
    },
    {
      "name": "wy-preview",
      "path": "./../src/components/wy-preview.ts",
      "attributes": [
        {
          "name": "uid",
          "type": "string",
          "default": "\"preview\""
        },
        {
          "name": "features",
          "type": "FeaturesConfigType | undefined",
          "default": "{}"
        },
        {
          "name": "app",
          "type": "AppType | undefined"
        },
        {
          "name": "user",
          "type": "UserType | undefined"
        },
        {
          "name": "currentId",
          "type": "number",
          "default": "\"NaN\""
        },
        {
          "name": "isAttachment",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "array",
          "default": "[\"allCss\"]"
        },
        {
          "name": "uid",
          "attribute": "uid",
          "type": "string",
          "default": "\"preview\""
        },
        {
          "name": "features",
          "attribute": "features",
          "type": "FeaturesConfigType | undefined",
          "default": "{}"
        },
        {
          "name": "availableFeatures",
          "type": "FeaturesListType | undefined",
          "default": "[]"
        },
        {
          "name": "files",
          "type": "FileType[] | undefined"
        },
        {
          "name": "queryResult",
          "type": "QueryObserverResult<FileType[]> | undefined"
        },
        {
          "name": "infiniteQueryResult",
          "type": "InfiniteQueryObserverResult<InfiniteData<FilesResultType, unknown>> | undefined"
        },
        {
          "name": "app",
          "attribute": "app",
          "type": "AppType | undefined"
        },
        {
          "name": "user",
          "attribute": "user",
          "type": "UserType | undefined"
        },
        {
          "name": "currentId",
          "attribute": "currentId",
          "type": "number",
          "default": "\"NaN\""
        },
        {
          "name": "isAttachment",
          "attribute": "isAttachment",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "currentFile",
          "type": "FileType | undefined"
        },
        {
          "name": "previousFile",
          "type": "FileType | undefined"
        },
        {
          "name": "nextFile",
          "type": "FileType | undefined"
        },
        {
          "name": "showOverlay",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "commentsOpen",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "versionsOpen",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "versionFile",
          "type": "FileType | undefined"
        },
        {
          "name": "sidePanelMaximized",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "previewFileRef",
          "type": "Ref<Element>",
          "default": "\"createRef()\""
        },
        {
          "name": "swipeScrollRef",
          "type": "Ref<Element>",
          "default": "\"createRef()\""
        },
        {
          "name": "prevRef",
          "type": "Ref<Element>",
          "default": "\"createRef()\""
        },
        {
          "name": "nextRef",
          "type": "Ref<Element>",
          "default": "\"createRef()\""
        },
        {
          "name": "swipeScroller",
          "type": "SwipeScrollController",
          "default": "\"new SwipeScrollController(this)\""
        },
        {
          "name": "handleKeys",
          "type": "(e: KeyboardEvent) => void",
          "default": "\"(e: KeyboardEvent) => {\\n    if (this.showOverlay) {\\n      if (e.key === \\\"ArrowLeft\\\") {\\n        e.stopPropagation();\\n        this.setPrev();\\n      } else if (e.key === \\\"ArrowRight\\\") {\\n        e.stopPropagation();\\n        this.setNext();\\n      }\\n    }\\n  }\""
        }
      ],
      "events": [
        {
          "name": "release-focus"
        }
      ]
    },
    {
      "name": "wy-reaction-item",
      "path": "./../src/components/wy-reaction-item.ts",
      "properties": [
        {
          "name": "styles",
          "default": "\"chatCss\""
        },
        {
          "name": "reaction",
          "type": "ReactionType"
        }
      ]
    },
    {
      "name": "wy-reactions",
      "path": "./../src/components/wy-reactions.ts",
      "attributes": [
        {
          "name": "directionX",
          "type": "\"left\" | \"right\"",
          "default": "\"left\""
        },
        {
          "name": "directionY",
          "type": "\"up\" | \"down\"",
          "default": "\"up\""
        },
        {
          "name": "small",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "messageType",
          "type": "\"comments\" | \"messages\" | \"posts\"",
          "default": "\"messages\""
        },
        {
          "name": "parentId",
          "type": "number | undefined"
        },
        {
          "name": "entityId",
          "type": "number"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "array",
          "default": "[\"chatCss\",null]"
        },
        {
          "name": "reactedEmoji",
          "type": "string | undefined"
        },
        {
          "name": "directionX",
          "attribute": "directionX",
          "type": "\"left\" | \"right\"",
          "default": "\"left\""
        },
        {
          "name": "directionY",
          "attribute": "directionY",
          "type": "\"up\" | \"down\"",
          "default": "\"up\""
        },
        {
          "name": "small",
          "attribute": "small",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "reactions",
          "type": "ReactableType[]",
          "default": "[]"
        },
        {
          "name": "emojis",
          "type": "string[]",
          "default": "[]"
        },
        {
          "name": "visible",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "hasFeature",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "messageType",
          "attribute": "messageType",
          "type": "\"comments\" | \"messages\" | \"posts\"",
          "default": "\"messages\""
        },
        {
          "name": "parentId",
          "attribute": "parentId",
          "type": "number | undefined"
        },
        {
          "name": "entityId",
          "attribute": "entityId",
          "type": "number"
        },
        {
          "name": "userId",
          "type": "number",
          "default": "-1"
        },
        {
          "name": "reactionListQuery",
          "type": "QueryController<ReactionsResult>",
          "default": "\"new QueryController<ReactionsResult>(this)\""
        }
      ],
      "events": [
        {
          "name": "wy-global-sheets-remove"
        },
        {
          "name": "release-focus"
        }
      ]
    },
    {
      "name": "wy-sheet",
      "path": "./../src/components/wy-sheet.ts",
      "attributes": [
        {
          "name": "show",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "default": "\"overlayStyles\""
        },
        {
          "name": "show",
          "attribute": "show",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "sheetId",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "handleKeys",
          "type": "(e: KeyboardEvent) => void",
          "default": "\"(e: KeyboardEvent) => {\\n    if (this.show) {\\n      if (e.key === \\\"Escape\\\") {\\n        //console.log(\\\"The Escape from Sheet Island\\\");\\n        e.stopImmediatePropagation();\\n        this.close();\\n      }\\n    }\\n  }\""
        }
      ],
      "events": [
        {
          "name": "removeModal"
        },
        {
          "name": "release-focus"
        },
        {
          "name": "wy-sheets-close"
        }
      ]
    },
    {
      "name": "wy-skeleton",
      "path": "./../src/components/wy-skeleton.ts",
      "attributes": [
        {
          "name": "text",
          "type": "string",
          "default": "\"\""
        }
      ],
      "properties": [
        {
          "name": "styles",
          "default": "\"chatCss\""
        },
        {
          "name": "text",
          "attribute": "text",
          "type": "string",
          "default": "\"\""
        }
      ]
    },
    {
      "name": "wy-spinner",
      "path": "./../src/components/wy-spinner.ts",
      "attributes": [
        {
          "name": "size",
          "type": "number",
          "default": "24"
        },
        {
          "name": "nospin",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "overlay",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "progress",
          "type": "number | undefined",
          "default": "\"NaN\""
        }
      ],
      "properties": [
        {
          "name": "size",
          "attribute": "size",
          "type": "number",
          "default": "24"
        },
        {
          "name": "nospin",
          "attribute": "nospin",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "overlay",
          "attribute": "overlay",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "progress",
          "attribute": "progress",
          "type": "number | undefined",
          "default": "\"NaN\""
        }
      ]
    },
    {
      "name": "wy-typing",
      "path": "./../src/components/wy-typing.ts",
      "attributes": [
        {
          "name": "appId",
          "type": "number"
        },
        {
          "name": "userId",
          "type": "number"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "default": "\"chatCss\""
        },
        {
          "name": "appId",
          "attribute": "appId",
          "type": "number"
        },
        {
          "name": "userId",
          "attribute": "userId",
          "type": "number"
        },
        {
          "name": "activeTypers",
          "type": "array",
          "default": "[]"
        },
        {
          "name": "text",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "typingTimeout",
          "type": "number | null"
        },
        {
          "name": "handleRealtimeTyping",
          "type": "(realtimeEvent: RealtimeTypingEventType) => void",
          "default": "\"(realtimeEvent: RealtimeTypingEventType) => {\\n    if (realtimeEvent.entity.id === this.appId && realtimeEvent.actor.id !== this.userId) {\\n      this.setTypers(realtimeEvent.actor);\\n      this.updateTyping();\\n    }\\n  }\""
        },
        {
          "name": "handleRealtimeStopTyping",
          "type": "(realtimeEvent: RealtimeEventType) => void",
          "default": "\"(realtimeEvent: RealtimeEventType) => {\\n    const typers = this.activeTypers;\\n\\n    // remove typing indicator for message sender\\n    typers.forEach((item, index) => {\\n      if (item.id === realtimeEvent.actor.id) {\\n        typers.splice(index, 1);\\n      }\\n    });\\n    this.updateTyping();\\n  }\""
        }
      ]
    },
    {
      "name": "wy-users-search",
      "path": "./../src/components/wy-users-search.ts",
      "properties": [
        {
          "name": "styles",
          "type": "array",
          "default": "[\"chatCss\",null]"
        },
        {
          "name": "existingMembers",
          "type": "MembersResultType | undefined",
          "default": "{\"data\":[],\"count\":0}"
        },
        {
          "name": "buttonTitle",
          "type": "string | undefined"
        },
        {
          "name": "text",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "peopleQuery",
          "type": "InfiniteQueryController<MembersResultType>",
          "default": "\"new InfiniteQueryController<MembersResultType>(this)\""
        }
      ],
      "events": [
        {
          "name": "submit"
        }
      ]
    },
    {
      "name": "wy-chat",
      "path": "./../src/wy-chat.ts",
      "attributes": [
        {
          "name": "uid",
          "type": "string | undefined"
        },
        {
          "name": "cssClass",
          "type": "string | undefined"
        },
        {
          "name": "features",
          "type": "FeaturesConfigType",
          "default": "{}"
        }
      ],
      "properties": [
        {
          "name": "uid",
          "attribute": "uid",
          "type": "string | undefined"
        },
        {
          "name": "realtimeMessageCreatedEvent",
          "description": "Event: New message created.",
          "type": "(realtimeEvent: RealtimeMessageEventType) => void",
          "default": "\"(realtimeEvent: RealtimeMessageEventType) =>{\\n    if (\\n      !this.weavyContext ||\\n      !this.conversation ||\\n      !this.user ||\\n      realtimeEvent.message.app_id !== this.conversation.id ||\\n      realtimeEvent.message.created_by_id === this.user.id\\n    ) {\\n      return;\\n    }\\n\\n    this.dispatchEvent(new CustomEvent(\\\"wy:message_created\\\", { bubbles: true, composed: false, detail: realtimeEvent }));\\n  }\""
        },
        {
          "name": "realtimeReactionAddedEvent",
          "description": "Event: Message reaction added.",
          "type": "(realtimeEvent: RealtimeReactionEventType) => void",
          "default": "\"(realtimeEvent: RealtimeReactionEventType) => {\\n    if (!this.weavyContext || !this.user || !this.conversation || realtimeEvent.actor.id === this.user.id) {\\n      return;\\n    }\\n    \\n    this.dispatchEvent(new CustomEvent(\\\"wy:reaction_added\\\", { bubbles: true, composed: false, detail: realtimeEvent }));\\n  }\""
        },
        {
          "name": "realtimeReactionRemovedEvent",
          "description": "Event: Message reaction removed.",
          "type": "(realtimeEvent: RealtimeReactionEventType) => void",
          "default": "\"(realtimeEvent: RealtimeReactionEventType) => {\\n    if (!this.weavyContext || !this.conversation || !this.user || realtimeEvent.actor.id === this.user.id) {\\n      return;\\n    }\\n    this.dispatchEvent(new CustomEvent(\\\"wy:reaction_removed\\\", { bubbles: true, composed: false, detail: realtimeEvent }));\\n  }\""
        },
        {
          "name": "realtimeAppUpdatedEvent",
          "description": "Event: Conversation app details updated.",
          "type": "(realtimeEvent: RealtimeAppEventType) => void",
          "default": "\"(realtimeEvent: RealtimeAppEventType) => {\\n    if (!this.conversation || realtimeEvent.app.id !== this.conversation.id) {\\n      return;\\n    }\\n    \\n    this.dispatchEvent(new CustomEvent(\\\"wy:app_updated\\\", { bubbles: true, composed: false, detail: realtimeEvent }));\\n  }\""
        },
        {
          "name": "styles",
          "type": "array",
          "default": "[null,\"colorModes\"]"
        },
        {
          "name": "user",
          "type": "UserType | undefined"
        },
        {
          "name": "conversation",
          "type": "ConversationType | undefined"
        },
        {
          "name": "lastReadMessageId",
          "type": "number | undefined"
        },
        {
          "name": "lastReadMessagePosition",
          "type": "\"top\" | \"bottom\"",
          "default": "\"bottom\""
        },
        {
          "name": "cssClass",
          "attribute": "cssClass",
          "type": "string | undefined"
        },
        {
          "name": "availableFeatures",
          "type": "FeaturesListType | undefined"
        },
        {
          "name": "features",
          "attribute": "features",
          "type": "FeaturesConfigType",
          "default": "{}"
        },
        {
          "name": "releaseFocusEvent",
          "description": "A keyboard-consuming element releases focus.",
          "type": "() => CustomEvent<undefined>",
          "default": "\"() => new CustomEvent<undefined>(\\\"release-focus\\\", { bubbles: true, composed: true })\""
        },
        {
          "name": "messagesQuery",
          "type": "InfiniteQueryController<MessagesResultType>",
          "default": "\"new InfiniteQueryController<MessagesResultType>(this)\""
        },
        {
          "name": "membersQuery",
          "type": "QueryController<MembersResultType>",
          "default": "\"new QueryController<MembersResultType>(this)\""
        },
        {
          "name": "userQuery",
          "type": "QueryController<UserType>",
          "default": "\"new QueryController<UserType>(this)\""
        },
        {
          "name": "featuresQuery",
          "type": "QueryController<FeaturesListType>",
          "default": "\"new QueryController<FeaturesListType>(this)\""
        },
        {
          "name": "handleRealtimeMessage",
          "type": "(realtimeEvent: RealtimeMessageEventType) => void",
          "default": "\"(realtimeEvent: RealtimeMessageEventType) => {\\n    if (\\n      !this.weavyContext ||\\n      !this.conversation ||\\n      !this.user ||\\n      realtimeEvent.message.app_id !== this.conversation.id ||\\n      realtimeEvent.message.created_by_id === this.user.id\\n    ) {\\n      return;\\n    }\\n\\n    realtimeEvent.message.created_by = realtimeEvent.actor;\\n    addCacheItem(this.weavyContext.queryClient, [\\\"messages\\\", this.conversation.id], realtimeEvent.message);\\n\\n    // mark as read\\n    if (!this.isContextualChat()) {\\n      this.markConversationMutation?.mutate({\\n        id: this.conversation!.id,\\n        markAsRead: true,\\n        messageId: realtimeEvent.message.id,\\n      });\\n    }\\n\\n    // display toast\\n    if (!this.isAtBottom && !this.lastReadMessageId) {\\n      this.lastReadMessageId = realtimeEvent.message.id;\\n      this.lastReadMessagePosition = \\\"top\\\";\\n    }\\n  }\""
        },
        {
          "name": "handleRealtimeReactionAdded",
          "type": "(realtimeEvent: RealtimeReactionEventType) => void",
          "default": "\"(realtimeEvent: RealtimeReactionEventType) => {\\n    if (!this.weavyContext || !this.user || !this.conversation || realtimeEvent.actor.id === this.user.id) {\\n      return;\\n    }\\n\\n    updateCacheItem(\\n      this.weavyContext.queryClient,\\n      [\\\"messages\\\", this.conversation.id],\\n      realtimeEvent.entity.id,\\n      (item: MessageType) => {\\n        item.reactions = [\\n          ...(item.reactions || []),\\n          { content: realtimeEvent.reaction, created_by_id: realtimeEvent.actor.id },\\n        ];\\n      }\\n    );\\n  }\""
        },
        {
          "name": "handleRealtimeReactionDeleted",
          "type": "(realtimeEvent: RealtimeReactionEventType) => void",
          "default": "\"(realtimeEvent: RealtimeReactionEventType) => {\\n    if (!this.weavyContext || !this.conversation || !this.user || realtimeEvent.actor.id === this.user.id) {\\n      return;\\n    }\\n    updateCacheItem(\\n      this.weavyContext.queryClient,\\n      [\\\"messages\\\", this.conversation.id],\\n      realtimeEvent.entity.id,\\n      (item: MessageType) => {\\n        item.reactions = item.reactions.filter((item) => item.created_by_id !== realtimeEvent.actor.id);\\n      }\\n    );\\n  }\""
        },
        {
          "name": "handleRealtimeAppUpdated",
          "type": "(realtimeEvent: RealtimeAppEventType) => void",
          "default": "\"(realtimeEvent: RealtimeAppEventType) => {\\n    if (!this.conversation || realtimeEvent.app.id !== this.conversation.id) {\\n      return;\\n    }\\n\\n    this.conversationTitle = this.conversationTitleInput = realtimeEvent.app.display_name;\\n  }\""
        },
        {
          "name": "handleRealtimeSeenBy",
          "type": "(realtimeEvent: RealtimeConversationMarkedEventType) => void",
          "default": "\"(realtimeEvent: RealtimeConversationMarkedEventType) => {\\n    if (\\n      !this.weavyContext ||\\n      !this.conversation ||\\n      this.isContextualChat() ||\\n      realtimeEvent.conversation.id !== this.conversation.id\\n    ) {\\n      return;\\n    }\\n\\n    updateCacheItem(\\n      this.weavyContext.queryClient,\\n      [\\\"members\\\", this.conversation.id],\\n      realtimeEvent.actor.id,\\n      (item: MemberType) => {\\n        item.marked_id = realtimeEvent.marked_id;\\n        item.marked_at = realtimeEvent.marked_at;\\n      }\\n    );\\n  }\""
        },
        {
          "name": "handleRealtimeDelivered",
          "type": "(realtimeEvent: RealtimeConversationDeliveredEventType) => void",
          "default": "\"(realtimeEvent: RealtimeConversationDeliveredEventType) => {\\n    if (\\n      !this.weavyContext ||\\n      !this.conversation ||\\n      realtimeEvent.actor.id === this.user!.id ||\\n      realtimeEvent.conversation.id !== this.conversation!.id\\n    ) {\\n      return;\\n    }\\n\\n    updateCacheItem(\\n      this.weavyContext.queryClient,\\n      [\\\"members\\\", this.conversation.id],\\n      realtimeEvent.actor.id,\\n      (item: MemberType) => {\\n        item.delivered_at = realtimeEvent.delivered_at;\\n      }\\n    );\\n  }\""
        },
        {
          "name": "isAtBottom",
          "type": "boolean"
        }
      ],
      "events": [
        {
          "name": "wy:message_created"
        },
        {
          "name": "wy:reaction_added"
        },
        {
          "name": "wy:reaction_removed"
        },
        {
          "name": "wy:app_updated"
        },
        {
          "name": "release-focus"
        }
      ]
    },
    {
      "name": "wy-context",
      "path": "./../src/wy-context.ts",
      "attributes": [
        {
          "name": "provider",
          "description": "Enables context provider mode. \nThis means only children elements of this element can use this context. \nThis is enabled automatically on initialization when any children elements are present.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "cloudFilePickerUrl",
          "description": "The url to the cloud file picker.",
          "type": "string | URL | undefined"
        },
        {
          "name": "locale",
          "description": "Selected locale. The locale must be pre configured in `.locales`.",
          "type": "string | undefined"
        },
        {
          "name": "locales",
          "description": "Array of enabled locales. The corresponding locales must be available for loading as a locale .js file.",
          "type": "string[] | undefined"
        },
        {
          "name": "localesUrl",
          "description": "The base url where locale .js files can be found.",
          "type": "string | URL | undefined"
        },
        {
          "name": "localizedTemplates",
          "description": "Map with preloaded locale template modules. Locale is key and the locale module or promise is value.",
          "type": "Map<string, LocaleModule | Promise<LocaleModule>> | undefined"
        },
        {
          "name": "gcTime",
          "description": "The max-allowed age of the cache in milliseconds. If a persisted cache is found that is older than this time, it will be discarded.\nIf set to `Infinity`, the cache will never be considered old.",
          "type": "number | undefined"
        },
        {
          "name": "modalParent",
          "description": "Element query selector for where to attach modals.\nDefaults to `body` but can be optionally be set to `html` to provide compatibility with some frameworks.\n> Note that any font styles must be provided using `:root` or `html` when using the `html` selector.",
          "type": "string | undefined"
        },
        {
          "name": "reactions",
          "description": "An array of available reaction emojis in unicode.",
          "type": "string[] | undefined"
        },
        {
          "name": "scrollBehavior",
          "description": "Which scroll behavior to use (where applicable).\n> Note that not all browsers (Chrome) have similar scroll transitions, they may be very slow.\nSee https://developer.mozilla.org/en-US/docs/Web/API/Element/scroll#behavior",
          "type": "\"smooth\" | \"instant\" | \"auto\" | undefined"
        },
        {
          "name": "staleTime",
          "description": "The time in milliseconds after data is considered stale.\nIf set to `Infinity`, the data will never be considered stale.",
          "type": "number | undefined"
        },
        {
          "name": "tokenFactory",
          "description": "Async function returning an `access_token` string for _your_ authenticated user. A boolean `refresh` parameter is provided to let you now if a fresh token is needed from Weavy.",
          "type": "WeavyTokenFactory | undefined"
        },
        {
          "name": "tokenFactoryTimeout",
          "description": "The time allowed to pass before tokenFactory is considered to have timed out.\n`Infinity` disables the timeout.",
          "type": "number | undefined"
        },
        {
          "name": "url",
          "description": "The URL to the weavy environment.",
          "type": "string | URL | undefined"
        },
        {
          "name": "zoomAuthenticationUrl",
          "description": "The url for zoom authentication.",
          "type": "string | URL | undefined"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "CSSResult[]",
          "default": "[null]"
        },
        {
          "name": "provider",
          "attribute": "provider",
          "description": "Enables context provider mode. \nThis means only children elements of this element can use this context. \nThis is enabled automatically on initialization when any children elements are present.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "cloudFilePickerUrl",
          "attribute": "cloudFilePickerUrl",
          "description": "The url to the cloud file picker.",
          "type": "string | URL | undefined"
        },
        {
          "name": "locale",
          "attribute": "locale",
          "description": "Selected locale. The locale must be pre configured in `.locales`.",
          "type": "string | undefined"
        },
        {
          "name": "locales",
          "attribute": "locales",
          "description": "Array of enabled locales. The corresponding locales must be available for loading as a locale .js file.",
          "type": "string[] | undefined"
        },
        {
          "name": "localesUrl",
          "attribute": "localesUrl",
          "description": "The base url where locale .js files can be found.",
          "type": "string | URL | undefined"
        },
        {
          "name": "localizedTemplates",
          "attribute": "localizedTemplates",
          "description": "Map with preloaded locale template modules. Locale is key and the locale module or promise is value.",
          "type": "Map<string, LocaleModule | Promise<LocaleModule>> | undefined"
        },
        {
          "name": "gcTime",
          "attribute": "gcTime",
          "description": "The max-allowed age of the cache in milliseconds. If a persisted cache is found that is older than this time, it will be discarded.\nIf set to `Infinity`, the cache will never be considered old.",
          "type": "number | undefined"
        },
        {
          "name": "modalParent",
          "attribute": "modalParent",
          "description": "Element query selector for where to attach modals.\nDefaults to `body` but can be optionally be set to `html` to provide compatibility with some frameworks.\n> Note that any font styles must be provided using `:root` or `html` when using the `html` selector.",
          "type": "string | undefined"
        },
        {
          "name": "reactions",
          "attribute": "reactions",
          "description": "An array of available reaction emojis in unicode.",
          "type": "string[] | undefined"
        },
        {
          "name": "scrollBehavior",
          "attribute": "scrollBehavior",
          "description": "Which scroll behavior to use (where applicable).\n> Note that not all browsers (Chrome) have similar scroll transitions, they may be very slow.\nSee https://developer.mozilla.org/en-US/docs/Web/API/Element/scroll#behavior",
          "type": "\"smooth\" | \"instant\" | \"auto\" | undefined"
        },
        {
          "name": "staleTime",
          "attribute": "staleTime",
          "description": "The time in milliseconds after data is considered stale.\nIf set to `Infinity`, the data will never be considered stale.",
          "type": "number | undefined"
        },
        {
          "name": "tokenFactory",
          "attribute": "tokenFactory",
          "description": "Async function returning an `access_token` string for _your_ authenticated user. A boolean `refresh` parameter is provided to let you now if a fresh token is needed from Weavy.",
          "type": "WeavyTokenFactory | undefined"
        },
        {
          "name": "tokenFactoryTimeout",
          "attribute": "tokenFactoryTimeout",
          "description": "The time allowed to pass before tokenFactory is considered to have timed out.\n`Infinity` disables the timeout.",
          "type": "number | undefined"
        },
        {
          "name": "url",
          "attribute": "url",
          "description": "The URL to the weavy environment.",
          "type": "string | URL | undefined"
        },
        {
          "name": "zoomAuthenticationUrl",
          "attribute": "zoomAuthenticationUrl",
          "description": "The url for zoom authentication.",
          "type": "string | URL | undefined"
        }
      ]
    },
    {
      "name": "wy-files",
      "path": "./../src/wy-files.ts",
      "description": "Files component to render a list of uploaded files and linked files from cloud providers.",
      "attributes": [
        {
          "name": "uid",
          "description": "Unique identifier for your app component.\nThe uid should correspond to the uid of the app created using the server-to-server Web API.",
          "type": "string"
        },
        {
          "name": "features",
          "description": "Config for disabling features in the component.\n*Note: You can't enable any features that aren't available in your license.*",
          "type": "FeaturesConfigType",
          "default": "{}"
        },
        {
          "name": "view",
          "description": "The view for showing the file list.\nThis value is persisted in sessionStorage.",
          "type": "FileViewType",
          "default": "\"list\""
        },
        {
          "name": "order",
          "description": "File order in the list. Order by combined with direction.\nThis value is persisted in sessionStorage.\nOrder by: \"id\" | \"name\" | \"size\" | \"created_at\" | \"modified_at\" | \"timestamp\".",
          "type": "FileOrderType",
          "default": "{\"by\":\"name\",\"descending\":false}"
        },
        {
          "name": "showTrashed",
          "description": "Enable showing trashed files.\nThis value is persisted in sessionStorage.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "array",
          "default": "[\"colorModes\",\"filesCss\",null]"
        },
        {
          "name": "uid",
          "attribute": "uid",
          "description": "Unique identifier for your app component.\nThe uid should correspond to the uid of the app created using the server-to-server Web API.",
          "type": "string"
        },
        {
          "name": "features",
          "attribute": "features",
          "description": "Config for disabling features in the component.\n*Note: You can't enable any features that aren't available in your license.*",
          "type": "FeaturesConfigType",
          "default": "{}"
        },
        {
          "name": "view",
          "attribute": "view",
          "description": "The view for showing the file list.\nThis value is persisted in sessionStorage.",
          "type": "FileViewType",
          "default": "\"list\""
        },
        {
          "name": "order",
          "attribute": "order",
          "description": "File order in the list. Order by combined with direction.\nThis value is persisted in sessionStorage.\nOrder by: \"id\" | \"name\" | \"size\" | \"created_at\" | \"modified_at\" | \"timestamp\".",
          "type": "FileOrderType",
          "default": "{\"by\":\"name\",\"descending\":false}"
        },
        {
          "name": "showTrashed",
          "attribute": "showTrashed",
          "description": "Enable showing trashed files.\nThis value is persisted in sessionStorage.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "wy:file_created"
        },
        {
          "name": "wy:file_updated"
        },
        {
          "name": "wy:file_trashed"
        },
        {
          "name": "wy:file_restored"
        },
        {
          "name": "wy:file_deleted"
        }
      ]
    },
    {
      "name": "wy-messenger",
      "path": "./../src/wy-messenger.ts",
      "attributes": [
        {
          "name": "name",
          "type": "string | undefined"
        },
        {
          "name": "features",
          "type": "FeaturesConfigType",
          "default": "{}"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "array",
          "default": "[\"colorModes\",\"chatCss\",null]"
        },
        {
          "name": "name",
          "attribute": "name",
          "type": "string | undefined"
        },
        {
          "name": "user",
          "type": "UserType | undefined"
        },
        {
          "name": "conversationId",
          "type": "number | null"
        },
        {
          "name": "features",
          "attribute": "features",
          "type": "FeaturesConfigType",
          "default": "{}"
        },
        {
          "name": "availableFeatures",
          "type": "FeaturesListType | undefined"
        },
        {
          "name": "hasEventListener",
          "type": "{ [key: string]: boolean; }",
          "default": "{\"wy:message_created\":false,\"wy:app_created\":false,\"wy:conversation_marked\":false,\"wy:conversation_delivered\":false,\"wy:member_added\":false}"
        }
      ],
      "events": [
        {
          "name": "wy:message_created"
        },
        {
          "name": "wy:app_created"
        },
        {
          "name": "wy:conversation_marked"
        },
        {
          "name": "wy:conversation_delivered"
        },
        {
          "name": "wy:member_added"
        }
      ]
    },
    {
      "name": "wy-posts",
      "path": "./../src/wy-posts.ts",
      "attributes": [
        {
          "name": "uid",
          "type": "string | undefined"
        },
        {
          "name": "cssClass",
          "type": "string | undefined"
        },
        {
          "name": "features",
          "type": "FeaturesConfigType",
          "default": "{}"
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "array",
          "default": "[\"colorModes\",\"postsCss\",null]"
        },
        {
          "name": "user",
          "type": "UserType | undefined"
        },
        {
          "name": "uid",
          "attribute": "uid",
          "type": "string | undefined"
        },
        {
          "name": "cssClass",
          "attribute": "cssClass",
          "type": "string | undefined"
        },
        {
          "name": "availableFeatures",
          "type": "FeaturesListType | undefined"
        },
        {
          "name": "features",
          "attribute": "features",
          "type": "FeaturesConfigType",
          "default": "{}"
        },
        {
          "name": "realtimePostCreatedEvent",
          "description": "Event: New post created.",
          "type": "(realtimeEvent: RealtimePostEventType) => CustomEvent<RealtimePostEventType>",
          "default": "\"(realtimeEvent: RealtimePostEventType) =>\\n    new CustomEvent(\\\"wy:post_created\\\", { bubbles: true, composed: false, detail: realtimeEvent })\""
        },
        {
          "name": "realtimeCommentCreatedEvent",
          "description": "Event: New comment created on a post.",
          "type": "(realtimeEvent: RealtimeCommentEventType) => CustomEvent<RealtimeCommentEventType>",
          "default": "\"(realtimeEvent: RealtimeCommentEventType) =>\\n    new CustomEvent(\\\"wy:comment_created\\\", { bubbles: true, composed: false, detail: realtimeEvent })\""
        },
        {
          "name": "realtimeReactionAddedEvent",
          "description": "Event: Post reaction added.",
          "type": "(realtimeEvent: RealtimeReactionEventType) => CustomEvent<RealtimeReactionEventType>",
          "default": "\"(realtimeEvent: RealtimeReactionEventType) =>\\n    new CustomEvent(\\\"wy:reaction_added\\\", { bubbles: true, composed: false, detail: realtimeEvent })\""
        },
        {
          "name": "realtimeReactionRemovedEvent",
          "description": "Event: Post reaction removed.",
          "type": "(realtimeEvent: RealtimeReactionEventType) => CustomEvent<RealtimeReactionEventType>",
          "default": "\"(realtimeEvent: RealtimeReactionEventType) =>\\n    new CustomEvent(\\\"wy:reaction_removed\\\", { bubbles: true, composed: false, detail: realtimeEvent })\""
        },
        {
          "name": "handleRealtimePostCreated",
          "type": "(realtimeEvent: RealtimePostEventType) => void",
          "default": "\"(realtimeEvent: RealtimePostEventType) => {\\n    if (\\n      !this.weavyContext ||\\n      realtimeEvent.post.app_id !== this.app!.id ||\\n      realtimeEvent.post.created_by_id === this.user!.id\\n    ) {\\n      return;\\n    }\\n\\n    realtimeEvent.post.created_by = realtimeEvent.actor;\\n    addCacheItem(this.weavyContext.queryClient, [\\\"posts\\\", this.app!.id], realtimeEvent.post, undefined, {\\n      descending: true,\\n    });\\n\\n    this.dispatchEvent(this.realtimePostCreatedEvent(realtimeEvent));\\n  }\""
        },
        {
          "name": "handleRealtimeCommentCreated",
          "type": "(realtimeEvent: RealtimeCommentEventType) => void",
          "default": "\"(realtimeEvent: RealtimeCommentEventType) => {\\n    if (!this.weavyContext || realtimeEvent.actor.id === this.user!.id) {\\n      return;\\n    }\\n\\n    updateCacheItem(\\n      this.weavyContext.queryClient,\\n      [\\\"posts\\\", this.app!.id],\\n      realtimeEvent.comment.parent!.id,\\n      (item: PostType) => {\\n        item.comment_count = (item.comment_count || 0) + 1;\\n      }\\n    );\\n\\n    this.dispatchEvent(this.realtimeCommentCreatedEvent(realtimeEvent));\\n  }\""
        },
        {
          "name": "handleRealtimeReactionAdded",
          "type": "(realtimeEvent: RealtimeReactionEventType) => void",
          "default": "\"(realtimeEvent: RealtimeReactionEventType) => {\\n    if (!this.weavyContext || realtimeEvent.actor.id === this.user!.id || realtimeEvent.entity.type !== \\\"post\\\") {\\n      return;\\n    }\\n\\n    updateCacheItem(\\n      this.weavyContext.queryClient,\\n      [\\\"posts\\\", this.app!.id],\\n      realtimeEvent.entity.id,\\n      (item: PostType) => {\\n        item.reactions = [\\n          ...(item.reactions || []),\\n          { content: realtimeEvent.reaction, created_by_id: realtimeEvent.actor.id },\\n        ];\\n      }\\n    );\\n\\n    this.dispatchEvent(this.realtimeReactionAddedEvent(realtimeEvent));\\n  }\""
        },
        {
          "name": "handleRealtimeReactionDeleted",
          "type": "(realtimeEvent: RealtimeReactionEventType) => void",
          "default": "\"(realtimeEvent: RealtimeReactionEventType) => {\\n    if (!this.weavyContext || realtimeEvent.actor.id === this.user!.id || realtimeEvent.entity.type !== \\\"post\\\") {\\n      return;\\n    }\\n\\n    updateCacheItem(\\n      this.weavyContext.queryClient,\\n      [\\\"posts\\\", this.app!.id],\\n      realtimeEvent.entity.id,\\n      (item: PostType) => {\\n        item.reactions = item.reactions.filter((item) => item.created_by_id !== realtimeEvent.actor.id);\\n      }\\n    );\\n\\n    this.dispatchEvent(this.realtimeReactionRemovedEvent(realtimeEvent));\\n  }\""
        }
      ],
      "events": [
        {
          "name": "wy:post_created"
        },
        {
          "name": "wy:comment_created"
        },
        {
          "name": "wy:reaction_added"
        },
        {
          "name": "wy:reaction_removed"
        }
      ]
    }
  ]
}