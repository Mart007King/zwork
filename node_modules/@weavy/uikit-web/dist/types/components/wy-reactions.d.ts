import { LitElement, PropertyValues } from "lit";
import type { ReactableType, ReactionsResult } from "../types/reactions.types";
import { QueryController } from "../controllers/query-controller";
import "./wy-spinner";
import "./wy-reaction-item";
import "./wy-button";
import "./wy-sheet";
import "./wy-icon";
import { WeavyContextProps } from "src/types/weavy.types";
export default class WyReactions extends LitElement {
    static styles: any[];
    reactedEmoji: string | undefined;
    private weavyContext?;
    directionX: "left" | "right";
    directionY: "up" | "down";
    small: boolean;
    reactions: ReactableType[];
    private _placement;
    emojis: string[];
    visible: boolean;
    hasFeature: boolean;
    messageType: "messages" | "posts" | "comments";
    parentId?: number;
    entityId: number;
    userId: number;
    private showSheet;
    private sheetId;
    private popperReferenceRef;
    private popperElementRef;
    private _popper?;
    reactionListQuery: QueryController<ReactionsResult>;
    private _documentClickHandler;
    private handleReaction;
    private handleReactionsClick;
    protected willUpdate(changedProperties: PropertyValues<this & WeavyContextProps>): void;
    render(): import("lit").TemplateResult<1>;
    protected updated(changedProperties: PropertyValues<this & WeavyContextProps>): void;
}
//# sourceMappingURL=wy-reactions.d.ts.map