import { LitElement, type PropertyValues } from "lit";
import type { MessageType } from "../types/messages.types";
import type { UserType } from "../types/users.types";
import { type MembersResultType } from "../types/members.types";
import "./wy-avatar";
import "./wy-typing";
import "./wy-icon";
import "./wy-button";
import "./wy-dropdown";
import { WeavyContextProps } from "../types/weavy.types";
export default class WyConversationListItem extends LitElement {
    static styles: any;
    private weavyContext?;
    conversationId: number;
    unread: boolean;
    avatarUrl: string;
    displayName: string;
    room: boolean;
    selected: boolean;
    starred: boolean;
    pinned: boolean;
    members: MembersResultType;
    lastMessage?: MessageType;
    user?: UserType;
    private deliveredConversationMutation?;
    private handleMessageCreated;
    private handleConversationUpdated;
    private handleConversationMarked;
    private dispatchRefetch;
    private dispatchSelected;
    private handleStar;
    private handlePin;
    private dispatchMarked;
    private handleLeaveConversation;
    willUpdate(changedProperties: PropertyValues<this & WeavyContextProps>): void;
    render(): import("lit").TemplateResult<1>;
}
//# sourceMappingURL=wy-conversation-list-item.d.ts.map