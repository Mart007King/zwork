import { LitElement, nothing, type PropertyValues } from "lit";
import "./wy-icon";
import "./wy-dropdown";
import "./wy-file-menu";
import "./wy-spinner";
import type { FileType } from "../types/files.types";
import type { AppType } from "../types/app.types";
import { WeavyContextProps } from "../types/weavy.types";
import { type FeaturesConfigType, type FeaturesListType } from "../types/features.types";
import "./wy-empty";
export declare class WyFileVersions extends LitElement {
    static styles: any;
    private weavyContext?;
    app: AppType;
    file: FileType;
    activeVersion?: FileType;
    features?: FeaturesConfigType;
    availableFeatures?: FeaturesListType;
    private fileVersionsQuery;
    private fileVersionRestoreMutation?;
    private fileVersionDeleteMutation?;
    selectVersion(versionFile: FileType): void;
    dispatchFileVersionSelect(versionFile: FileType): boolean;
    handleRevert(versionFile: FileType): void;
    handleRemove(versionFile: FileType): void;
    triggerDownload(file: FileType): void;
    willUpdate(changedProperties: PropertyValues<this & WeavyContextProps>): void;
    render(): import("lit").TemplateResult<1> | typeof nothing;
}
//# sourceMappingURL=wy-file-versions.d.ts.map