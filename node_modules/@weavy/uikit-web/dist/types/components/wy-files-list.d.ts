import { LitElement, nothing } from "lit";
import "./wy-icon";
import "./wy-dropdown";
import "./wy-file-menu";
import type { FileOrderType, FileType, FileViewType } from "../types/files.types";
import type { FeaturesConfigType, FeaturesListType } from "../types/features.types";
export declare class WyFilesList extends LitElement {
    static styles: any;
    private weavyContext?;
    files?: FileType[];
    dataUpdatedAt?: number;
    order: FileOrderType;
    view: FileViewType;
    isRenamingId?: number;
    features?: FeaturesConfigType;
    availableFeatures?: FeaturesListType;
    dispatchFileOpen(file: FileType): boolean;
    dispatchOrder(order: FileOrderType): boolean;
    dispatchEditName(file: FileType): boolean;
    dispatchRename(file: FileType, name: string): boolean;
    dispatchTrash(file: FileType): boolean;
    dispatchRestore(file: FileType): boolean;
    dispatchDeleteForever(file: FileType): boolean;
    dispatchSubscribe(file: FileType, subscribe: boolean): boolean;
    constructor();
    render(): import("lit").TemplateResult<1> | typeof nothing;
}
//# sourceMappingURL=wy-files-list.d.ts.map