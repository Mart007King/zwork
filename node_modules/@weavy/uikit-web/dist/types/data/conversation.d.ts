import { MutationObserver } from "@tanstack/query-core";
import { type WeavyContext } from "../client/weavy-context";
import { ConversationType } from "../types/app.types";
import { ConversationMutationContextType } from "../types/conversations.types";
export type MutateDeliveredConversationVariables = {
    id: number | null;
};
export type MutateMarkConversationVariables = {
    id: number | null;
    markAsRead: boolean;
    messageId: number | null;
};
export type MutateStarConversationVariables = {
    id: number | null;
    star: boolean;
};
export type MutatePinConversationVariables = {
    id: number | null;
    pin: boolean;
};
export type MutateLeaveConversationVariables = {
    id: number | null;
    members: number[];
};
export type MutateAddMembersToConversationVariables = {
    id: number | null;
    members: number[];
};
export type MutateUpdateConversationVariables = {
    id: number | null;
    title: string | null;
};
export type DeliveredConversationMutationType = MutationObserver<ConversationType, Error, MutateDeliveredConversationVariables, ConversationMutationContextType>;
export type MarkConversationMutationType = MutationObserver<ConversationType, Error, MutateMarkConversationVariables, ConversationMutationContextType>;
export type StarConversationMutationType = MutationObserver<void, Error, MutateStarConversationVariables, ConversationMutationContextType>;
export type PinConversationMutationType = MutationObserver<void, Error, MutatePinConversationVariables, ConversationMutationContextType>;
export type LeaveConversationMutationType = MutationObserver<void, Error, MutateLeaveConversationVariables, ConversationMutationContextType>;
export type AddMembersToConversationMutationType = MutationObserver<void, Error, MutateAddMembersToConversationVariables, ConversationMutationContextType>;
export type UpdateConversationMutationType = MutationObserver<ConversationType, Error, MutateUpdateConversationVariables, ConversationMutationContextType>;
export declare function getDeliveredConversationMutationOptions(weavyContext: WeavyContext): {
    mutationFn: ({ id }: MutateDeliveredConversationVariables) => Promise<any>;
    onMutate: () => Promise<ConversationMutationContextType>;
};
export declare function getMarkConversationMutationOptions(weavyContext: WeavyContext): {
    mutationFn: ({ id, markAsRead, messageId }: MutateMarkConversationVariables) => Promise<any>;
    onMutate: () => Promise<ConversationMutationContextType>;
};
export declare function getStarConversationMutationOptions(weavyContext: WeavyContext): {
    mutationFn: ({ id, star }: MutateStarConversationVariables) => Promise<void>;
    onMutate: (variables: MutateStarConversationVariables) => Promise<ConversationMutationContextType>;
};
export declare function getPinConversationMutationOptions(weavyContext: WeavyContext): {
    mutationFn: ({ id, pin }: MutatePinConversationVariables) => Promise<void>;
    onMutate: () => Promise<ConversationMutationContextType>;
};
export declare function getLeaveConversationMutationOptions(weavyContext: WeavyContext): {
    mutationFn: ({ id, members }: MutateLeaveConversationVariables) => Promise<void>;
    onMutate: () => Promise<ConversationMutationContextType>;
};
export declare function getAddMembersToConversationMutationOptions(weavyContext: WeavyContext): {
    mutationFn: ({ id, members }: MutateAddMembersToConversationVariables) => Promise<void>;
    onMutate: () => Promise<ConversationMutationContextType>;
};
export declare function getUpdateConversationMutationOptions(weavyContext: WeavyContext): {
    mutationFn: ({ id, title }: MutateUpdateConversationVariables) => Promise<any>;
    onMutate: (variables: MutateUpdateConversationVariables) => Promise<ConversationMutationContextType>;
};
export declare function getDeliveredConversationMutation(weavyContext: WeavyContext): DeliveredConversationMutationType;
export declare function getMarkConversationMutation(weavyContext: WeavyContext): MarkConversationMutationType;
export declare function getStarConversationMutation(weavyContext: WeavyContext): StarConversationMutationType;
export declare function getPinConversationMutation(weavyContext: WeavyContext): PinConversationMutationType;
export declare function getLeaveConversationMutation(weavyContext: WeavyContext): LeaveConversationMutationType;
export declare function getAddMembersToConversationMutation(weavyContext: WeavyContext): AddMembersToConversationMutationType;
export declare function getUpdateConversationMutation(weavyContext: WeavyContext): UpdateConversationMutationType;
//# sourceMappingURL=conversation.d.ts.map