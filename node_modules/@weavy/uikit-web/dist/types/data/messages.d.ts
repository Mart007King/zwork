import type { InfiniteQueryObserverOptions, MutationKey, InfiniteData } from "@tanstack/query-core";
import { type WeavyContext } from "../client/weavy-context";
import { MessageType, MutateMessageProps, type MessagesResultType, MessageMutationContextType } from "../types/messages.types";
export declare function getMessagesOptions(weavyContext: WeavyContext, appId: number | null, options?: Object): InfiniteQueryObserverOptions<MessagesResultType, Error, InfiniteData<MessagesResultType>>;
export declare function getAddMessageMutationOptions(weavyContext: WeavyContext, mutationKey: MutationKey): {
    mutationFn: (variables: MutateMessageProps) => Promise<any>;
    mutationKey: MutationKey;
    onMutate: (variables: MutateMessageProps) => Promise<MessageMutationContextType>;
    onSuccess: (data: MessageType, variables: MutateMessageProps, context: MessageMutationContextType) => void;
};
//# sourceMappingURL=messages.d.ts.map