import { type WeavyContext } from "../client/weavy-context";
import { AppType } from "../types/app.types";
export declare function getApp<T>(weavyContext: WeavyContext, appId: string): Promise<T>;
export declare function getAppById<T>(weavyContext: WeavyContext, id: number): Promise<T>;
export type MutateAppSubscribeProps = {
    subscribe: boolean;
};
export type MutateAppSubscribeContextType = {
    previousSubscribe: boolean | undefined;
    subscribe: boolean;
} | undefined;
export declare function getAppSubscribeMutationOptions(weavyContext: WeavyContext, app: AppType): {
    mutationFn: ({ subscribe }: MutateAppSubscribeProps) => Promise<any>;
    onMutate: (variables: MutateAppSubscribeProps) => Promise<{
        previousSubscribe: boolean | undefined;
        subscribe: boolean;
    }>;
    onSuccess: (data: AppType) => void;
    onError(error: Error, variables: MutateAppSubscribeProps, context: MutateAppSubscribeContextType): void;
};
//# sourceMappingURL=app.d.ts.map