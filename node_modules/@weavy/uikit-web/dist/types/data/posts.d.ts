import type { InfiniteQueryObserverOptions, MutationKey, InfiniteData } from "@tanstack/query-core";
import { type WeavyContext } from "../client/weavy-context";
import { MutatePostProps, PostType, PostsResultType } from "../types/posts.types";
export declare function getPostsOptions(weavyContext: WeavyContext, appId: number | null): InfiniteQueryObserverOptions<PostsResultType, Error, InfiniteData<PostsResultType>>;
export declare function getUpdatePostMutationOptions(weavyContext: WeavyContext, mutationKey: MutationKey): {
    mutationFn: (variables: MutatePostProps) => Promise<any>;
    mutationKey: MutationKey;
    onMutate: (variables: MutatePostProps) => Promise<void>;
    onSuccess: (data: PostType, variables: MutatePostProps) => void;
};
export type MutatePostContextType = {
    tempId: number;
};
export declare function getAddPostMutationOptions(weavyContext: WeavyContext, mutationKey: MutationKey): {
    mutationFn: (variables: MutatePostProps) => Promise<any>;
    mutationKey: MutationKey;
    onMutate: (variables: MutatePostProps) => Promise<MutatePostContextType>;
    onSuccess: (data: PostType, variables: MutatePostProps, context?: MutatePostContextType) => void;
};
//# sourceMappingURL=posts.d.ts.map