import { type MutationKey, MutationObserver } from "@tanstack/query-core";
import { type WeavyContext } from "../client/weavy-context";
import type { FileMutationContextType, FileType } from "../types/files.types";
import type { AppType } from "../types/app.types";
export type MutateFileNameVariables = {
    file: FileType;
    name: string;
};
export type RenameFileMutationType = MutationObserver<FileType, Error, MutateFileNameVariables, FileMutationContextType>;
export declare function getRenameFileMutationOptions(weavyContext: WeavyContext, app: AppType): {
    mutationKey: MutationKey;
    mutationFn: ({ file, name }: MutateFileNameVariables) => Promise<FileType>;
    onMutate: (variables: MutateFileNameVariables) => FileMutationContextType;
    onSuccess: (data: FileType, variables: MutateFileNameVariables) => void;
    onError(error: Error, variables: MutateFileNameVariables): void;
};
export declare function getRenameFileMutation(weavyContext: WeavyContext, app: AppType): RenameFileMutationType;
//# sourceMappingURL=file-rename.d.ts.map