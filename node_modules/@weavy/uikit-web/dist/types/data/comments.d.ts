import type { InfiniteQueryObserverOptions, MutationKey, InfiniteData } from "@tanstack/query-core";
import { type WeavyContext } from "../client/weavy-context";
import { CommentMutationContextType, CommentType, CommentsResultType, MutateCommentProps } from "../types/comments.types";
export declare function getCommentsOptions(weavyContext: WeavyContext, type: string, parentId: number | null, options?: Object): InfiniteQueryObserverOptions<CommentsResultType, Error, InfiniteData<CommentsResultType>>;
export declare function getUpdateCommentMutationOptions(weavyContext: WeavyContext, mutationKey: MutationKey): {
    mutationFn: (variables: MutateCommentProps) => Promise<any>;
    mutationKey: MutationKey;
    onSuccess: (data: CommentType, variables: MutateCommentProps) => void;
};
export declare function getAddCommentMutationOptions(weavyContext: WeavyContext, mutationKey: MutationKey): {
    mutationFn: (variables: MutateCommentProps) => Promise<any>;
    mutationKey: MutationKey;
    onMutate: (variables: MutateCommentProps) => Promise<CommentMutationContextType>;
    onSuccess: (data: CommentType, variables: MutateCommentProps, context: CommentMutationContextType) => void;
};
//# sourceMappingURL=comments.d.ts.map