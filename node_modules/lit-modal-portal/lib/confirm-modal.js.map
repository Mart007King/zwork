{
  "version": 3,
  "sources": ["../src/lib/confirm-modal.ts"],
  "sourcesContent": ["import { LitElement, html, css } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { when } from 'lit/directives/when.js';\nimport { ref } from 'lit/directives/ref.js';\nimport { WithLitDialog } from './with-lit-dialog';\n\nimport './lit-dialog';\n\n/**\n * A stock custom element `<confirm-modal>` for a confirmation dialog modal.\n * The content of the confirmation prompt is exposed via a `<slot>`,\n * and the cancel/confirm buttons are displayed below.\n * Support for a secondary, alternative action is included.\n *\n * There's a reactive property that controls whether the modal closes upon\n * clicking the confirmation button, which defaults to `true`.\n *\n * This component exposes [[LitDialog.enableLightDismiss]] and makes it\n * default to true.\n */\n@customElement('confirm-modal')\nexport default class ConfirmModal extends WithLitDialog(LitElement) {\n  static styles = [\n    css`\n      .confirmation-dialog {\n        background: white;\n        padding: 1rem;\n        border-radius: 0.5rem;\n        border: 2px solid black;\n        max-width: 480px;\n        display: flex;\n        flex-direction: column;\n        gap: 1rem;\n      }\n\n      .button-row {\n        display: flex;\n        gap: 1rem;\n      }\n\n      .spacer {\n        flex-grow: 1;\n      }\n    `,\n  ];\n\n  @property({ attribute: 'cancel-label' })\n  cancelLabel: string = 'Cancel';\n\n  @property({ attribute: 'confirm-label' })\n  confirmLabel: string = 'Confirm';\n\n  @property({ attribute: false })\n  confirmCallback: Function | undefined;\n\n  @property({ attribute: 'secondary-label' })\n  secondaryLabel: string = 'Alternative';\n\n  @property({ attribute: false })\n  secondaryAction: Function | undefined;\n\n  @property({ type: Boolean, attribute: false })\n  closeOnConfirmation: boolean = true;\n\n  @property({ type: Boolean, attribute: false })\n  enableLightDismiss: boolean = true;\n\n  handleConfirm() {\n    if (this.confirmCallback) {\n      this.confirmCallback();\n      if (this.closeOnConfirmation) {\n        this.closeDialog();\n      }\n    }\n  }\n\n  handleSecondaryAction() {\n    if (this.secondaryAction) {\n      this.secondaryAction();\n      this.closeDialog();\n    }\n  }\n\n  render() {\n    return html`\n      <lit-dialog\n        ${ref(this.litDialogRef)}\n        label=${this.confirmLabel}\n        .enableLightDismiss=${this.enableLightDismiss}\n      >\n        <div class=\"confirmation-dialog\">\n          <div>\n            <slot>\n              <p>\n                This is the message that asks the user to confirm the action. This component also\n                has properties for a secondary action.\n              </p>\n            </slot>\n          </div>\n          <div class=\"button-row\">\n            <button @click=${() => this.closeDialog()} autofocus>${this.cancelLabel}</button>\n            <span class=\"spacer\"></span>\n            ${when(\n              this.secondaryAction,\n              () =>\n                html`\n                  <button @click=${() => this.handleSecondaryAction()}>\n                    ${this.secondaryLabel}\n                  </button>\n                `\n            )}\n            ${when(\n              this.confirmCallback,\n              () => html`<button @click=${() => this.handleConfirm()}>${this.confirmLabel}</button>`\n            )}\n          </div>\n        </div>\n      </lit-dialog>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'confirm-modal': ConfirmModal;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAeA,iCAA0C,cAAc,UAAU,EAAE;AAAA,EAApE;AAAA;AA0BE,uBAAsB;AAGtB,wBAAuB;AAMvB,0BAAyB;AAMzB,+BAA+B;AAG/B,8BAA8B;AAAA;AAAA,EAE9B,gBAAgB;AACd,QAAI,KAAK,iBAAiB;AACxB,WAAK,gBAAgB;AACrB,UAAI,KAAK,qBAAqB;AAC5B,aAAK,YAAY;AAAA,MACnB;AAAA,IACF;AAAA,EACF;AAAA,EAEA,wBAAwB;AACtB,QAAI,KAAK,iBAAiB;AACxB,WAAK,gBAAgB;AACrB,WAAK,YAAY;AAAA,IACnB;AAAA,EACF;AAAA,EAEA,SAAS;AACP,WAAO;AAAA;AAAA,UAED,IAAI,KAAK,YAAY;AAAA,gBACf,KAAK;AAAA,8BACS,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAYN,MAAM,KAAK,YAAY,eAAe,KAAK;AAAA;AAAA,cAE1D,KACA,KAAK,iBACL,MACE;AAAA,mCACmB,MAAM,KAAK,sBAAsB;AAAA,sBAC9C,KAAK;AAAA;AAAA,iBAGf;AAAA,cACE,KACA,KAAK,iBACL,MAAM,sBAAsB,MAAM,KAAK,cAAc,KAAK,KAAK,uBACjE;AAAA;AAAA;AAAA;AAAA;AAAA,EAKV;AACF;AAlGS,AADT,aACS,SAAS;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBF;AAGA;AAAA,EADA,AAAC,SAAS,EAAE,WAAW,eAAe,CAAC;AAAA,GACvC,AA1BF,aA0BE;AAGA;AAAA,EADA,AAAC,SAAS,EAAE,WAAW,gBAAgB,CAAC;AAAA,GACxC,AA7BF,aA6BE;AAGA;AAAA,EADA,AAAC,SAAS,EAAE,WAAW,MAAM,CAAC;AAAA,GAC9B,AAhCF,aAgCE;AAGA;AAAA,EADA,AAAC,SAAS,EAAE,WAAW,kBAAkB,CAAC;AAAA,GAC1C,AAnCF,aAmCE;AAGA;AAAA,EADA,AAAC,SAAS,EAAE,WAAW,MAAM,CAAC;AAAA,GAC9B,AAtCF,aAsCE;AAGA;AAAA,EADA,AAAC,SAAS,EAAE,MAAM,SAAS,WAAW,MAAM,CAAC;AAAA,GAC7C,AAzCF,aAyCE;AAGA;AAAA,EADA,AAAC,SAAS,EAAE,MAAM,SAAS,WAAW,MAAM,CAAC;AAAA,GAC7C,AA5CF,aA4CE;AA5CF;AAAA,EADA,AAAC,cAAc,eAAe;AAAA,GAC9B;",
  "names": []
}
